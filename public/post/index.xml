<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Meghan Hall</title>
    <link>/post/</link>
      <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020</copyright><lastBuildDate>Mon, 18 May 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>Posts</title>
      <link>/post/</link>
    </image>
    
    <item>
      <title>The State of Goalie Pulling in the NHL</title>
      <link>/post/goalie-pulling/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      <guid>/post/goalie-pulling/</guid>
      <description>


&lt;p&gt;When people ask me how to get into sports analytics, I always suggest starting with a question that they’re interested in exploring and using that question as a framework for learning the domain knowledge and the technical skills they need. I feel comfortable giving this advice because it’s exactly how I got into hockey analytics: I was curious about goalie pulling, and I couldn’t find enough data to satisfy my curiosity. There are plenty of articles on when teams should pull their goalies, but aside from a &lt;a href=&#34;https://fivethirtyeight.com/features/nhl-coaches-are-pulling-goalies-earlier-than-ever/&#34;&gt;2015 article on FiveThirtyEight&lt;/a&gt; by Michael Lopez and Noah Davis, I couldn’t find much data on when NHL teams were actually pulling their goalies and if game trends were catching up to the mathematical recommendations. I presented some data on the topic at the &lt;a href=&#34;http://meghan.rbind.io/talk/seahac/&#34;&gt;Seattle Hockey Analytics Conference&lt;/a&gt; in March 2019, but the following analysis is broader and includes more seasons of data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Read the entire article on Hockey-Graphs &lt;a href=&#34;https://hockey-graphs.com/2020/05/18/the-state-of-goalie-pulling-in-the-nhl/&#34;&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Tableau dashboard that accompanies this article should show below and is also available &lt;a href=&#34;https://public.tableau.com/views/GoaliePullTimes2018-19/GoaliePullTimes18-19?:display_count=y&amp;amp;publish=yes&amp;amp;:toolbar=n&amp;amp;:origin=viz_share_link&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div style=&#34;align: center; margin-left: -250px;&#34;&gt;
&lt;iframe src=&#34;https://public.tableau.com/views/GoaliePullTimes2018-19/GoaliePullTimes18-19?:showVizHome=no&amp;:embed=true&#34; width=&#34;1300px&#34; height=&#34;1300px&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to Tableau</title>
      <link>/post/introduction-to-tableau/</link>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/post/introduction-to-tableau/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#screencast-video&#34;&gt;Screencast video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#introduction-035&#34;&gt;Introduction (0:35)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dimensions-and-measures-345&#34;&gt;Dimensions and measures (3:45)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#building-a-bar-chart-525&#34;&gt;Building a bar chart (5:25)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#side-by-side-bar-chart-1530&#34;&gt;Side-by-side bar chart (15:30)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stacked-bar-chart-2335&#34;&gt;Stacked bar chart (23:35)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#line-graph-2830&#34;&gt;Line graph (28:30)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scatterplot-3345&#34;&gt;Scatterplot (33:45)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#chart-with-dual-axis-3738&#34;&gt;Chart with dual axis (37:38)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pie-chart-4535&#34;&gt;Pie chart (45:35)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;screencast-video&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Screencast video&lt;/h2&gt;
&lt;p&gt;A bunch of people have been asking me for some kind of Tableau tutorial, so I’m experimenting with a screencast video on YouTube! The video should be embedded below and is also &lt;a href=&#34;https://www.youtube.com/watch?v=fN7vAfeN0_E&amp;amp;feature=youtu.be&#34;&gt;available here&lt;/a&gt;. The sample data set I use will probably be familiar to you if you’ve ever done any of my R tutorials, it’s a CSV that’s available to download &lt;a href=&#34;https://github.com/hockey-graphs/HG_intro_tutorial/blob/master/PHI_tutorial_data.csv&#34;&gt;here&lt;/a&gt; (to download from Github, just hold down Alt and click the Raw button). A (lightly-edited) transcript with time stamps is available below.&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/fN7vAfeN0_E&#34; frameborder=&#34;0&#34; allowfullscreen&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;div id=&#34;introduction-035&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introduction (0:35)&lt;/h2&gt;
&lt;p&gt;Just as a disclaimer before we get started, I had mentioned that I had done a lot of R tutorials, and there are a lot of people who want to discuss which is better and which is worse, Tableau vs. R vs. many other programs for visualizing data, and I personally don’t really have a lot of interest in that argument. Both Tableau and R have strengths and weaknesses, advantages and disadvantages, and I really don’t think there’s any harm in having more tools in your toolbox. Tableau in particular is really useful free tool for visualizing data and is particularly beginner-friendly.&lt;/p&gt;
&lt;p&gt;This is Tableau Public. Tableau does have a lot of various enterprise options, but Tableau Public is the version that is free. The main limitation with Tableau Public is that you cannot save anything locally to your computer. Along with downloading Tableau Public you get a Tableau Public account, and everything gets saved to that account. It is true that you can hide visualizations, I have certain older visualizations that I don’t really want anyone to see anymore. I have them hidden but they still exist on the Internet, so this is not a good solution if you are working with confidential data or data that you don’t want anyone to see.&lt;/p&gt;
&lt;p&gt;We’re going to start off by connecting to data, which you can do with this big Connect to Data button. The data we’re going to use for this is the data that I use for most of my tutorials, so I’m sorry if you’re bored with this data. It is a CSV file that’s available on my Github, it’s hockey data, four games from the past NHL season, four Philadelphia Flyers games from November 2019. It’s play-by-play data I have scraped, and that’s what we’ll be using here.&lt;/p&gt;
&lt;p&gt;Once you load in data here, we’re just going to be working with one csv file, but you can bring in more files and you can do joins and unions and all of those sorts of things. You can also modify your data fields here in this pane, you can do simple pivots to make your data wider or longer. You can also modify your data fields within the worksheets, which we’re going to do now. Anytime you want to get back to your data source, just select the Data Source button in the lower left corner.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;dimensions-and-measures-345&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Dimensions and measures (3:45)&lt;/h2&gt;
&lt;p&gt;A big part of learning Tableau is just understanding how it works, and once you understand that, you can more intuitively understand how to build visualizations. The hardest part of learning Tableau is figuring out what they call everything and how to use their language to build the visualizations that you need. But in general, here it will show all your data fields as dimensions, which are string or character variables, and measures, which are numbers. Tableau makes its best guess when it reads in data, but you can make changes. In this example, it read our season variable as a number, but I don’t really want it as a number, I would prefer that it be a string variable. All you have to do is right-click on the data field and select Change Data Type, and you can change it to a string. It will still leave it as a measure, but all you have to do is drag it up to the dimension section. You can do the same the other way, as well. This data set contains x and y coordinates for shot locations, and while it automatically brought them in as strings, maybe we want them as numbers. Again, just select both, right click, select Change Data Type and select whole number. Then move them to measures.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;building-a-bar-chart-525&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Building a bar chart (5:25)&lt;/h2&gt;
&lt;p&gt;The first thing to learn in any data visualization program is how to make a super-simple bar chart. We’re going to look at the number of shots each player took. If you just double-click any variable, like we do here with Event Player 1, it will automatically bring it over into the view onto Rows. We’re also going to filter this view because we’re only interested in shots on goal for this particular bar graph. So we’re going to drag the Event Type field to filter and then select GOAL and SHOT. You can get fairly complicated with your filters (that will be an overarching theme in this entire tutorial, everything I show you does have more complex options), but we’re just choosing two.&lt;/p&gt;
&lt;p&gt;One of the most useful fields in Tableau is this Number of Records field, which will show up in every data set under measures. It just counts the number of rows and we’ll bring that in by double-clicking it. Now we have a list of players and their shots. We probably want to sort this, so we’re going to right-click on this Event Player 1 field (in Tableau these are called pills) and select Sort. There are lots of ways to sort, but we’re going to sort by field, by descending, and by the default, which is the sum of the number of records.&lt;/p&gt;
&lt;p&gt;One of the nice things about Tableau is that it’s got this icon in the upper right called Show Me that has a bunch of different graph types you can select. Now when I build visualizations in Tableau I don’t really use these because I know how to build the charts and graphs that I want, but it’s really useful for beginners because it teaches you how Tableau builds visualizations. If I click on bar graph, watch what happens on the screen: all it did was move Number of Records from text to columns.&lt;/p&gt;
&lt;p&gt;One of my biggest tips for people who are learning Tableau is to make as many changes as you can to these default settings because everyone’s default Tableau graph looks the same. Every one looks the same, with this font and this tooltip (which is what shows up when you hover over a data point) and the blue bars. There’s a lot of customization you can do in Tableau, and as we go through these several chart types that we’re going to build, we’re going to show some of those options. The first thing I’m interested in is I want to have a label on these bars. All I have to do is drag my Number of Records field to the label field. If I want to make other changes, you can go into the Format menu, then select Workbook. When you want to make changes, you can do it either at the full workbook level (which I would recommend for changes you’ll want everywhere, like changing the font) or the individual worksheet level. One reminder: if you’re sharing these visualizations on Tableau Public, which most people are, you can’t necessarily use tons of fancy fonts because the people viewing your visualizations might not have those fonts. There’s a list of fonts that are global on Tableau Public, which you can find via Google, but right now just to make a change, we’re using super-plain Arial. This will change the font throughout the entire workbook. If there are individual changes you want to make, you can change the font for those things separately and it will override the global option.&lt;/p&gt;
&lt;p&gt;Just to show how that would work, if we wanted to modify these row headers, all we have to do is right-click and select Format. Now we can change the font, we can make it bold and larger, etc. I personally don’t like these field labels, so I always right-click and hide those.&lt;/p&gt;
&lt;p&gt;This is kind of a big bar chart, so if I only want to show players with at least five shots, all you have to do is right-click on the Number of Records field and select Filter. We’re going to select At Least and filter to only show players that have at least five shots, and that will make the bar chart much smaller. Again, the standard bar chart color is always blue, so if you want to change what this bar color is, you have a few options. You can select the color field here in the Marks section, or you can bring in another data field and drop it onto this color option. Say that we want to take this Event Team field, we can drag it over to the color option. Blue and orange is the standard Tableau color palette, so I would highly recommend changing it. Just select the colors, you can add custom colors by hex codes, you can upload your own color palettes, or you can use a Tableau color palette. We’ll make Philadelphia orange and make Vancouver blue. This is a pretty ugly graph now, but it shows you some of the things you can do when making a bar chart.&lt;/p&gt;
&lt;p&gt;The next thing I would want to change is this axis so that it actually reads something meaningful. You can do this by right-clicking on the axis and selecting Edit. You can change what you want the range of the axis to be, since in some cases you might not want to show zero, I’m just going to change the axis title to Total Shots on Goal. I personally also have a lot of opinions, like most of you probably do, on how I want my graphs to look, and Tableau allows you to customize just about everything with how the lines and axes look. You can change these on each individual sheet, but I prefer to do it by going to Format -&amp;gt; Workbook because I know I like these changes across the workbook. I generally don’t like grid lines so I can take those off, I can get rid of axis ticks which I also don’t like, and I can change up what the axis lines look like. Again, there are a lot of different formatting options, but I recommend using the Format -&amp;gt; Workbook method for the global options you want because it will make it much easier.&lt;/p&gt;
&lt;p&gt;Lastly, one of the nice things about Tableau that I mentioned before is that you have these tooltips if you hover over a data point. These are very customizable and I recommend that you customize them because there are a lot neat things you can do with them, and it makes your Tableau workbook look a little more custom, a little less straight-out-of-the-box.&lt;/p&gt;
&lt;p&gt;If you don’t like the tooltips in general, you can find them by clicking on the Tooltips button on this marks card, you can just unclick “Show tooltips” and it will just remove them. But again, you can really play with these. All of the fields that are in your view are available by clicking the Insert button, and you can also add more fields to your view if you wanted to have access to them in your tooltip. We could rewrite these, and I think it’s nice to have more detail in your tooltips.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;side-by-side-bar-chart-1530&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Side-by-side bar chart (15:30)&lt;/h2&gt;
&lt;p&gt;We’ll create a new sheet down here, and we’ll take our Game ID field (a unique identifier for each game) into Rows. We’re again going to use our Event Type filter and filter down to to SHOT and GOAL. A neat thing with Tableau filters (though we’re not going to experiment with this here) is that you can apply these filters to multiple worksheets, which is really useful so you don’t have to keep creating filters. We’re going to add the number of records onto Columns, which will make a bar chart. Up here in the menu bar, there’s an option to swap rows and columns to make a column bar chart. Right now this is showing the total number of shots on goal, for both teams, for each game. If I wanted to see it by team and create a side-by-side bar chart, all I have to do is drag this Event Team data field over to Columns, then it automatically creates a side-by-side bar chart for me. Here at the bottom are all of the teams in these games, and the only thing I don’t like about this is that I’d like it better if the Philadelphia column was to the right in every section. It’s not because it’s showing the teams in alphabetical order, but we can change this by going to the Event Team data field, click the arrow and then click sort, we can sort manually and I can drag Philadelphia to the bottom so that it’s the right-hand column in each of these sections, which I find easier to read.&lt;/p&gt;
&lt;p&gt;Say we want to color these bars by which team it is. We can do that by bringing this Event Team dimension, just dragging it over to color on the Marks card. I don’t particularly like this because it assigned a different color to each team, which I don’t think for this visualization is necessary. If I wanted all the other teams besides Philadelphia to be gray, I could just go through and change every other team color manually, but that’s a little too much work. Instead I’m going to create a calculated field that we’re going to keep using through this tutorial. Under the Analysis menu, go to Create Calculated Field. You can create a lot of different calculations in Tableau, but this is going to be a super simple if statement: IF Event Team = “PHI” THEN “Y” ELSE “N” END. Drag this new PHI calculation onto color, replacing the Event Team pill that was already there. This is better because Philadelphia is one color and all the other teams are another color. I’m going to change the specific colors, also. The good news is when you change colors in Tableau, those colors will maintain every time you use the field. Here we’re setting the Philadelphia color to be orange and the “other team” color to be light gray. If you use this field in another visualization, which we will do, it will maintain these colors.&lt;/p&gt;
&lt;p&gt;Just as a reminder, you can format any of these options that are here in the view. If we wanted to change this Game ID field, we could right-click and select Format to make this bold, if we wanted to make Event Team italic, we can do that. Another neat feature in Tableau when you’re dealing with dimensions is the concept of aliases. If, for example, I don’t want these Game ID values to show up like this, all I have to do is right-click on it and I can edit the alias. I could call this “Carolina Game” or “Game 27” or whatever. These aliases can be really useful if the way your data comes in doesn’t necessarily match the way you want to display it. If you want to get rid of abbreviations and things like that, the aliases can help. You can also find them if you navigate to that data field in the dimensions pane, right-click and select Aliases. You can set them all at once.&lt;/p&gt;
&lt;p&gt;One last thing that I wanted to show on this particular graph is the way that filters work. This graph is showing the number of shots on goal for every team in every game, but say we wanted to filter that further, we can drag in this Game Strength State field onto Filter. Say I only wanted to see shots that happened at 5v5, or I can go over to the data field in the Filter section, hit the arrow, and select Show Filter. That will add it to the view. Again, there are a lot of formatting options for the filter which you can find by selecting the little arrow in the title section. For example, I can select Single Value and List, which allows you to easily change the filter selections in your view.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;stacked-bar-chart-2335&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Stacked bar chart (23:35)&lt;/h2&gt;
&lt;p&gt;We’ll open another new sheet and will work with Game ID again. We’ll bring Game ID to columns, and we’ll use our favorite Number of Records field and we’ll bring that to Rows. This has automatically made a column bar chart with all of the rows for each Game ID. We are not interested in all of those Event Types, so we’ll bring Event Type to Filter and filter down to just shot attempts: BLOCK, GOAL, MISS, SHOT. Let’s say we want to create a stacked bar chart where I can see the percentage of each event type for each game. So how we would build this is that we need to take the Event Type field again and bring that over to Color, which will add the color feature to our bar chart with a different color for each event type. We’ll change the color palette, I mentioned there are a bunch of built-in color palettes within Tableau, or you can also create your own. This is closer to what we want, but this is still showing total numbers while we want to see a percentage.&lt;/p&gt;
&lt;p&gt;In order to do that, we need to go up to our Number of Records pill on our Rows shelf, click the little arrow, and we’ll go down to the table calculation section. I know I sound like a broken record here, but here in this tutorial we’re just skimming the surface of what Tableau can do. You can get pretty complicated with your table calculations, but we’re just going to select Quick Table Calculation and then Percent of Total. Now these percentages don’t look exactly right, and that just means they aren’t computing along the right data field. So all we have to do is click the arrow on the Number of Records pill and you’ll see a new option in this menu called Compute Using. This tells Tableau how you want this percentage to be calculated. We want it to be calculated across Event Type, so we’ll select that, and then that will make the stacked bar that we want.&lt;/p&gt;
&lt;p&gt;If we want to add a label to these bars, all we have to do is again, select the Number of Records field from the measures section and drag that over to Label. That will label all the individual sections, but it just labels it with the raw number. You might want to show that (I often show the raw number as well as the calculation in my labels), but if we just want the percentage label, add the same Quick Table Calculation to this label. You can select the Format option on the Label pill if you wanted to change the number format. The labels, similar to the tooltips, are very flexible and you can add a lot of information. If we also wanted to add Event Type to the label, we could absolutely do that. Drag in another instance of the Event Type field and drag it onto Label. It will show up automatically, and if you want to edit it further, just click the Label card to edit and format the text.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;line-graph-2830&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Line graph (28:30)&lt;/h2&gt;
&lt;p&gt;We have a Game Date field here. Working with dates in Tableau, just like working with dates in any other program, has a bit of a learning curve to it. A lot of that depends on how your dates are formatted in the data source as you bring them into Tableau, but Tableau has a lot of functionality around dates. Here, we’re going to bring our Game Date field onto Columns. You can see kind of immediately that this looks weird, this just shows the year of the Game Date. But we can change that by selecting the down arrow on the pill and there are lots of options for how to display the date. We want to display the full date, so we’ll select Day. These are the four dates that these games were played. This also looks a little weird, but we’re going to fix that in a minute. Also, one of my biggest Tableau lessons is don’t be afraid when your visualization looks weird because a lot of them look weird and bad at the beginning and just take some finagling to make them look good. This looks weird, don’t worry about it.&lt;/p&gt;
&lt;p&gt;We’re going to move our Number of Records field to Rows, and that’s automatically going to make a basic line graph. This does this because it recognizes the axis as a date. Over on the marks card, you can see that the line option is the automatic option. You can change this here, we could make it into a bar chart, we could make it into circles, but we’re good with the Line option. These games dates aren’t showing up exactly as how I want them because it’s a little misleading to add these extra dates in here. These four games were only on the odd number dates, and it’s incorrect data-wise to be showing these other dates. I understand why Tableau is doing this, it thinks it’s being helpful, but it’s really not. That’s another common thing with Tableau, you often have to figure out ways to override the ways that it tries to help you that you don’t agree with. We can fix this particular problem by going back to the Game Date pill, selecting the down arrow, and then change it to Discrete from Continuous. Then you only have the selected dates, which is exactly what we want.&lt;/p&gt;
&lt;p&gt;This is just showing all the rows per Game Date, but we can add Event Type to Filter again and just select BLOCK, GOAL, MISS, SHOT. This shows a line graph for both teams during the game, but if we wanted to, we could add something to the Color mark to make multiple lines. If we go back to the data field we created earlier, which is just a yes/no field that determines whether the team is Philadelphia or their opponent, and bring that to Color, you can see here that it creates multiple lines.&lt;/p&gt;
&lt;p&gt;The last thing I want to show on this graph (again, we’re just trying to touch on a lot of the basic Tableau functionalities) is that I want to introduce the concept of a reference line. If you right click on any numeric axis, there should be an option to Add Reference Line. Again, you can get very complex with your reference lines, but this one is going to be really basic, so basic that it’s the default reference line. It’s taking the value of that axis, which here is the sum of the Number of Records, and we want to show the average. We’re going to change the scope up here to the Entire Table, and you can see that it creates an average line. You can get very fancy with how you calculate these reference lines, but we’ll keep it really simple for now. You can change the label, if I want it to say Average Number of Shots, you can set what the tooltip looks like, you can format what the line looks like, if we want an orange line like this. This is a very useful feature in Tableau that makes it easy to look at data aggregated at different levels within the same view. There are much more complex ways to do that, we’ll very briefly touch on it, but this is a useful way if the measure you’re interested in is fairly simple.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;scatterplot-3345&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Scatterplot (33:45)&lt;/h2&gt;
&lt;p&gt;We have been looking, in some of our previous charts, at our Event Type field filtered down into different groups. But for a scatterplot, we’re going to make a couple of calculated fields so that we can compare them. If we go to the Analysis menu, then Create Calculated Field, all we’re going to do is create two calculated fields, one is going to isolate the GOAL values and the other will isolate GOAL and SHOT. You can do that individually by filtering the view, as we’ve been doing, but since we want to compare them both at the same time in the same view, it’s just easier to create some simple calculated fields. Our Goals calculated field: IF Event Type = “GOAL” THEN 1 ELSE 0 END. Our Shots calculated field: IF Event Type = “GOAL” OR Event Type = “SHOT” THEN 1 ELSE 0 END.&lt;/p&gt;
&lt;p&gt;Move the Shots data field to Columns, the Goals data field to Rows. This does not look like a standard scatterplot, and that’s because Tableau as a default likes to aggregate data. This one little dot that shows up on this pathetic scatterplot shows all the goals and all the shots. That’s not what we’re interested in for this particular exercise, we want to see a scatterplot of shots versus goals for every team in each game. So all we have to do in order to do that is add those fields over here onto the Detail option on the Marks card. If we drag Game ID onto Detail, now we have four dots, one for each game, which is progress. If we also add Event Team onto detail, there we go, now we have eight dots. This particular dot at 0,0 is showing up because there are some rows with an Event Team of NA. To get rid of those, all we have to do is select our Event Team pill, click Filter, and uncheck NA.&lt;/p&gt;
&lt;p&gt;Now we have a scatterplot that isn’t formatted in any customized way but looks how we want it to look. If we wanted to make these dots into filled-in circles, as opposed to empty circles, go onto the Marks card and change to Circle. We can also make them bigger by adjusting the size, and if we want to do color, we can use our PHI calculated field and drag that onto color. You can see that this maintains the color palette we created for this field previously. All of the Philadelphia circles are orange, and the other teams are gray. You can also add labels, if we wanted to add Event Team, we can just drag that field onto Label, and then you could customize those.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;chart-with-dual-axis-3738&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Chart with dual axis (37:38)&lt;/h2&gt;
&lt;p&gt;This next one we’re going to build is a really helpful skill to learn in Tableau. We’re going to learn how to make what’s basically a bar chart but with a dual axis. We’re going to do this in a really simple way, and this is a good gateway into how to make really neat-looking custom graphs in Tableau. The dual axis is a really powerful feature to know. A big learning curve is Tableau is learning how to display data at different levels of aggregation in the same view. We showed it before when we made the reference line in our line graph, that’s one really easy way to do it, this dual axis method is a way to explore it, and you can also do this with calculations (and that won’t be the focus of this video because it’s getting a little too complex).&lt;/p&gt;
&lt;p&gt;Here, we’re going to make a dual axis chart that shows how many shots a player got in all of these games, compared to what their average per game was. So we’re looking at different levels of aggregation in the same view. In this example, I’m only interested in the Philadelphia players because they played the most games, so I’m going to drag Event Team over to Filter and select Philadelphia. I’m going to filter my Event Type to shot attempts (BLOCK, GOAL, MISS, SHOT), and then I’m going to bring my Event Player 1 field onto Columns. This should be old hat now, we’re going to add the Number of Records to text and we’re going to sort it (again, basically the same as how we built the bar chart in the beginning).&lt;/p&gt;
&lt;p&gt;On our way to building this dual axis chart, I’m going to show how you can make basic cross tabs in Tableau, which are very useful for looking at your data. So again, it’s going to look a little ugly for a minute. We’re going to take this Measure Names field, which is always the last field in the dimensions section and just has the names of every measure, and bring that up into Columns. We’re going to take the partner of the Measure Names field, the Measure Values field, and we’re going to bring that over onto Text, to replace the Number of Records field. (But you’ll notice that the sort maintains because we did it at the Event Player 1 level.) I’m not interested in all of these fields, so I can just select Filter on the Measure Names pill and uncheck all of them besides Number of Records. You’re going to question why I did this, but it makes it easier to show you the next part. So I mentioned that for this dual axis chart, we want to see the total number of shot attempts for each player, which we have listed here already, and we also want to see the average per game. So in order to do that, we need to create an average field. But first, we want to be able to double-check how many games they played. It’s nice, when you’re creating calculations in Tableau, to create them iteratively like this to make sure it’s aggregating as you expect and that the math is right.&lt;/p&gt;
&lt;p&gt;We’re going to take our Game ID field, which is our unique identifier for each game, and we’re going to drag that into this Measure Values box. Tableau does not like that, as you can see, because we have Game ID set up as a dimension but are asking it to act like a measure. We can get around this, all you have to do is select the Game ID pill and go down to Measure, then we’re going to ask it to, instead of acting as a string, act as a measure with a distinct count. We can see that most of these players played in all four games, a couple only played in three, etc. We’re going to go to the Analysis menu, Create Calculated Field, and we’re going to call this Player Average: SUM(Number of Records) / COUNTD(Game Id). That will create a new data field that we can drag into our Measure Values box, and you can spot check that it is calculating correctly.&lt;/p&gt;
&lt;p&gt;Now we’re going to bring Number of Records to Columns, we’re also going to take Player Average and also bring that to Columns. Now you basically have two bar charts, one for Number of Records and one for Player Average. We’re going to right-click on the Player Average axis and select Dual Axis, which will bring them together. The most important step is to again right-click on the Player Average axis and select Synchronize Axis, so the axes are lined up properly. In this case I don’t really want to show this Player Average axis, so I’ll just right-click and uncheck this Show Header option, which will get rid of it. As you can see now here on the Marks card, we have two options, we have our Number of Records axis, and we have our Player Average marks. We can change both of those. I’m going to take the Number of Records section and change it to a bar, I want it to be a bar chart. I can change the color up here, I want it to be a light gray bar. And then in my Player Average section, I like it as a dot, we can stick with this. You could change this to another shape, you could add a label. When you have a dual axis, you just have to remember that you have two options on your Marks card, so you can make changes to both of them or just to one of them. But that’s another easy way to show data aggregating at different levels: the total and the average.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;pie-chart-4535&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Pie chart (45:35)&lt;/h2&gt;
&lt;p&gt;The last chart we’re going to make, we’re going to go through how to make a pie chart. I know pie charts are fairly controversial, we’re going to make a very basic pie chart, mostly just to show you how to do it in Tableau. We’ll filter down to one game, we’ll pick this second one, and we’re going to make a pie chart that shows the shot attempts by team, percentage-wise. We’ll bring Event Team down to color, and again, we want to get rid of the NA value. We can just right-click on the NA value in the color legend and select Exclude, which is, as you can see, just another way to create a filter. Under the Marks card, we’ll change the option to Pie. This makes a half-and-half pie chart. We can use the size option to make it bigger if we want to, but we have to add another field to tell Tableau how we’d like it divided.&lt;/p&gt;
&lt;p&gt;As you can see when you select Pie on the Marks card, there’s a new option for Angle. All we’re going to do is take our Shots calculated field we created before and drag that right onto Angle. If we wanted to add a label, all we’d have to do is bring our Shots field onto Label, and we now know how to make quick table calculations in Tableau if we wanted a percent of total. We can also format it to show a rounded percentage. A good thing to know about Tableau is that the labels are movable, so you can just move that label straight onto the pie chart if you want. We can change the formatting of the label, we can make it bold, say if we wanted to make it white, we can do that. A compromise that people have reached in the pie chart world is just showing one piece of the pie chart. Say we were only interested in showing the Philadelphia part, this 59 percent section. The easiest way to do that in Tableau, really, is just change the color of the other part of the pie chart and change it to white. Then it looks like you have just one piece of the pie chart.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Creating Custom Themes in ggplot2</title>
      <link>/post/creating-custom-themes-in-ggplot2/</link>
      <pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/post/creating-custom-themes-in-ggplot2/</guid>
      <description>


&lt;p&gt;In March 2020, the Greater Boston useR Group hosted a &lt;a href=&#34;https://www.meetup.com/Boston-useR/events/269130710/&#34;&gt;Virtual Tidy Tuesday Meetup&lt;/a&gt;, and I gave a 10-minute lightning talk on getting started with building custom themes in &lt;code&gt;ggplot2&lt;/code&gt;. The slides should be embedded below!&lt;/p&gt;
&lt;iframe src=&#34;/slides/BostonUseRGroupSlides_Hall.html&#34; width=&#34;672&#34; height=&#34;505px&#34;&gt;
&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Learning R with Hockey Data in Swirl</title>
      <link>/post/hockey-data-with-swirl/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/post/hockey-data-with-swirl/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://swirlstats.com/&#34; target=&#34;_blank&#34;&gt;The &lt;code&gt;swirl&lt;/code&gt; package&lt;/a&gt; is an incredibly neat learning tool that teaches you how to use R via interactive learning in the RStudio console. And an associated package called &lt;code&gt;swirlify&lt;/code&gt; allows anyone to &lt;em&gt;create&lt;/em&gt; lessons that can then be used by anyone using &lt;code&gt;swirl&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I&#39;ve created a course called &lt;a href=&#34;https://github.com/meghall06/Hockey_Data_With_Swirl&#34; target=&#34;_blank&#34;&gt;Hockey Data With Swirl&lt;/a&gt; that aims to teach you basic tidyverse functions using hockey data. The data set used in the swirl lesson is the same one used in &lt;a href=&#34;https://hockey-graphs.com/2019/12/11/an-introduction-to-r-with-hockey-data/&#34; target=&#34;_blank&#34;&gt;my introduction to R at Hockey-Graphs&lt;/a&gt;, and the content is similar, but not quite identical. You can go through either tutorial, or both, in any order. The &lt;code&gt;swirl&lt;/code&gt; package is just another learning tool that guides you through, question by question. Right now there is only one lesson in the course, but my goal is to add more in the future (such as a lesson for &lt;code&gt;ggplot2&lt;/code&gt;!).&lt;/p&gt;

&lt;p&gt;In order to go through the lesson, you need to have downloaded R and RStudio (the instructions for which are available in the Hockey-Graphs tutorial I linked above). In RStudio, open a script and run the following code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;install.packages&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;swirl&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(swirl)
&lt;span style=&#34;color:#a6e22e&#34;&gt;install_course_github&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;meghall06&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hockey_Data_With_Swirl&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;swirl&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The console prompts will take over from there. &lt;code&gt;swirl&lt;/code&gt; works through the console, which allows for interactivity but doesn&#39;t make it easy to save your code and go back to it later. I&#39;ve attempted to account for that by making available &lt;a href=&#34;https://github.com/meghall06/Hockey_Data_With_Swirl/blob/master/swirl_lesson_one.R&#34; target=&#34;_blank&#34;&gt;the code file&lt;/a&gt; that contains all of the questions and answers from the lesson.&lt;/p&gt;

&lt;p&gt;I hope you find the lesson useful, feel free to give feedback and let me know what other topics you&#39;d be interested in!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Exploring tidymodels With Hockey Data</title>
      <link>/post/tidymodels-intro/</link>
      <pubDate>Mon, 09 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/post/tidymodels-intro/</guid>
      <description>&lt;p&gt;Before we start, an important disclaimer: this is &lt;em&gt;not&lt;/em&gt; a tutorial on how to thoughtfully build and thoroughly evaluate models. This is a gentle introduction to the &lt;code&gt;tidymodels&lt;/code&gt; package (which, like the &lt;code&gt;tidyverse&lt;/code&gt;, is actually a collection of packages), and in order to examine various functions and capabilities of those packages, we&#39;ll build two very simple models, using easily available NHL data, and go over a few ways to evaluate them.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;tidymodels&lt;/code&gt; package, which is fairly new, was designed to make it easier to create your model framework in a tidy way and consists of, among others, &lt;code&gt;recipes&lt;/code&gt; (prepping models), &lt;code&gt;parsnip&lt;/code&gt; (executing models), and &lt;code&gt;yardstick&lt;/code&gt; (evaluating models). Here, we&#39;ll build two simple models to predict whether an NHL player is a forward or a defenseman.&lt;/p&gt;

&lt;h3 id=&#34;find-and-prepare-the-data&#34;&gt;Find and prepare the data&lt;/h3&gt;

&lt;p&gt;First, let&#39;s get our data prepped—we&#39;re using 2018-19 data so we can have a full season. We&#39;ll get the position data by downloading from &lt;a href=&#34;http://www.naturalstattrick.com/playerteams.php?fromseason=20182019&amp;thruseason=20182019&amp;stype=2&amp;sit=5v5&amp;score=all&amp;stdoi=bio&amp;rate=n&amp;team=ALL&amp;pos=S&amp;loc=B&amp;toi=0&amp;gpfilt=none&amp;fd=&amp;td=&amp;tgp=410&amp;lines=single&amp;draftteam=ALL&#34; target=&#34;_blank&#34;&gt;Natural Stat Trick&lt;/a&gt;, and we&#39;ll create our statistics from the raw play-by-play data, available via the &lt;a href=&#34;https://twitter.com/EvolvingWild/status/1163503829993828353&#34; target=&#34;_blank&#34;&gt;Evolving Wild scraper&lt;/a&gt;. (Could you download all these summary statistics from NST instead? Definitely. But this is about learning, and it&#39;s great R practice [pRactice?] to generate them yourself from the play-by-play data.)&lt;/p&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    One of the &lt;code&gt;tidymodels&lt;/code&gt; packages called &lt;code&gt;dials&lt;/code&gt; has a &lt;code&gt;margin()&lt;/code&gt; function that will mask the &lt;code&gt;margin()&lt;/code&gt; function in &lt;code&gt;ggplot2&lt;/code&gt;. If you use the &lt;code&gt;margin()&lt;/code&gt; function in your &lt;code&gt;ggplot2&lt;/code&gt; custom theme like I do, just load &lt;code&gt;tidymodels&lt;/code&gt; before &lt;code&gt;tidyverse&lt;/code&gt; and you should be fine.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidymodels)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)

&lt;span style=&#34;color:#75715e&#34;&gt;# Read in files (pbp from Evolving Hockey, bios from Natural Stat Trick)&lt;/span&gt;

pbp &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_csv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pbp_20182019_all.csv&amp;#34;&lt;/span&gt;)
bios &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_csv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bios_1819.csv&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Find player TOI and games played&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# To do so, you must pivot the data so there is one row per player&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# (instead of one row per event)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# We don&amp;#39;t care about the ice time for the goalies (sorry, goalies)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# so they will be filtered out&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# We also do some name changes to make things easier later&lt;/span&gt;

player_TOI &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; pbp &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(event_length &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(game_id, event_length, home_on_1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;away_goalie) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;pivot_longer&lt;/span&gt;(home_on_1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;away_on_6, names_to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;variable&amp;#34;&lt;/span&gt;, values_to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;player&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(player)) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; player &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; home_goalie &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; player &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; away_goalie) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(player &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;case_when&lt;/span&gt;(
    player &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;COLIN.WHITE2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;COLIN.WHITE&amp;#34;&lt;/span&gt;,
    player &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERIK.GUSTAFSSON2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERIK.GUSTAFSSON&amp;#34;&lt;/span&gt;,
    player &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PATRICK.MAROON&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PAT.MAROON&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; player
  )) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(player) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;summarize&lt;/span&gt;(games &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;n_distinct&lt;/span&gt;(game_id),
            TOI &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(event_length) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Find basic player stats&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# To find individual stats, we again need to pivot the data to one row per player&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# but we&amp;#39;re using the event_players only (not the on ice players)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# You&amp;#39;ll notice we&amp;#39;re filtering out the shootout (which is game_period 5) because&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# those goals don&amp;#39;t count&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# We&amp;#39;ll sum up blocked shots (event_player_2 is the player who blocked the shot,&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# event_player_1 is the one who generated it), total points, shots, unblocked shots,&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# hits (both give nand received)&lt;/span&gt;

player_stats &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; pbp &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(event_type &lt;span style=&#34;color:#f92672&#34;&gt;%in%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HIT&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BLOCK&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SHOT&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MISS&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GOAL&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; game_period &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(game_id, event_type, event_player_1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;event_player_3) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;pivot_longer&lt;/span&gt;(event_player_1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;event_player_3, names_to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;number&amp;#34;&lt;/span&gt;, values_to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;player&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(player))) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(block &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(event_type &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BLOCK&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; number &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;event_player_2&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
         point &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(event_type &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GOAL&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
         shot &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(number &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;event_player_1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; event_type &lt;span style=&#34;color:#f92672&#34;&gt;%in%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SHOT&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GOAL&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
         fenwick &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(number &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;event_player_1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; event_type &lt;span style=&#34;color:#f92672&#34;&gt;%in%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SHOT&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GOAL&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MISS&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
         hit &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(number &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;event_player_1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; event_type &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HIT&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
         hit_rec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(number &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;event_player_2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; event_type &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HIT&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
         player &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;case_when&lt;/span&gt;(
           player &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;COLIN.WHITE2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;COLIN.WHITE&amp;#34;&lt;/span&gt;,
           player &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERIK.GUSTAFSSON2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERIK.GUSTAFSSON&amp;#34;&lt;/span&gt;,
           player &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PATRICK.MAROON&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PAT.MAROON&amp;#34;&lt;/span&gt;,
           &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; player
         )) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(player) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;summarize&lt;/span&gt;(blocks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(block),
            points &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(point),
            shots &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(shot),
            fenwick &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(fenwick),
            hits &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(hit),
            hits_rec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(hit_rec))

&lt;span style=&#34;color:#75715e&#34;&gt;# Join stats into TOI data frame and create rates&lt;/span&gt;

player_TOI_stats &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; player_TOI &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;left_join&lt;/span&gt;(player_stats, by &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;player&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(points_60 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; points &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; TOI,
         shots_60 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; shots &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; TOI,
         fenwick_60 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fenwick &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; TOI,
         hits_60 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hits &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; TOI,
         hits_rec_60 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hits_rec &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; TOI,
         blocks_60 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; blocks &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; TOI,
         TOI_game &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; TOI &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; games) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(blocks&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;hits_rec))

&lt;span style=&#34;color:#75715e&#34;&gt;# Clean up the biographical data&lt;/span&gt;

bios &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; bios &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(player &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_to_upper&lt;/span&gt;(Player),
         player &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace&lt;/span&gt;(player, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;),
         defense &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(Position &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;D&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;D&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;F&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;rename&lt;/span&gt;(height &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;`Height &lt;/span&gt;(in)`,
         weight = `&lt;span style=&#34;color:#a6e22e&#34;&gt;Weight &lt;/span&gt;(lbs)`) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(player, defense, height, weight) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(player &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(player, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ALEXANDER&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ALEX&amp;#34;&lt;/span&gt;),
         player &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(player, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ALEXANDRE&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ALEX&amp;#34;&lt;/span&gt;),
         player &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;case_when&lt;/span&gt;(
           player &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CHRISTOPHER.TANEV&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CHRIS.TANEV&amp;#34;&lt;/span&gt;,
           player &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DANNY.O&amp;#39;REGAN&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DANIEL.O&amp;#39;REGAN&amp;#34;&lt;/span&gt;,
           player &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;EVGENII.DADONOV&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;EVGENY.DADONOV&amp;#34;&lt;/span&gt;,
           player &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MATTHEW.BENNING&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MATT.BENNING&amp;#34;&lt;/span&gt;,
           player &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MITCHELL.MARNER&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MITCH.MARNER&amp;#34;&lt;/span&gt;,
           &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; player
         ))

&lt;span style=&#34;color:#75715e&#34;&gt;# Join biographical data into stats data&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Filter to only keep players who played at least 20 games&lt;/span&gt;

final_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; player_TOI_stats &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;left_join&lt;/span&gt;(bios, by &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;player&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(games &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These stats are the ones that we&#39;re going to use in our model to predict whether a given player is a forward or a defenseman. Let&#39;s create at a few graphs, just to see how some of these data look.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# The code for these four graphs is nearly the same, just change the x&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# and the title/labels&lt;/span&gt;

final_data &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; weight, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; defense)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_density&lt;/span&gt;(alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_fill_manual&lt;/span&gt;(values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#0d324d&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#a188a6&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(
    y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Density&amp;#34;&lt;/span&gt;,
    x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Weight (lbs)&amp;#34;&lt;/span&gt;,
    fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Weight by Position&amp;#34;&lt;/span&gt;,
    subtitle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2018-19 NHL Season, 20+ Games Played Only&amp;#34;&lt;/span&gt;,
    caption &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Source: Natural Stat Trick&amp;#34;&lt;/span&gt;
  ) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;meg_theme&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(legend.position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.9&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.9&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;













&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;weight_by_position.png&#34; &gt;
&lt;img src=&#34;weight_by_position.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;















&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;scoring_rate.png&#34; &gt;
&lt;img src=&#34;scoring_rate.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;















&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;TOI_by_position.png&#34; &gt;
&lt;img src=&#34;TOI_by_position.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;















&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;blocked_shots.png&#34; &gt;
&lt;img src=&#34;blocked_shots.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;p&gt;We can spot some differences here by position: defensemen tend to score at a lower rate and block shots at a higher rate than forwards do. They also tend to spend more time on the ice (by necessity, since there are generally half the number of defensemen as forwards on a dressed roster), which is one of the most well-known differences in the positions. In order to try to predict whether a given player is a forward or a defenseman, we&#39;re going to build two logistic regression models. One will have the average time on ice as its sole predictor variable, while the other will have all of these variables (average time on ice, height, weight, points per 60, shots per 60, unblocked shots per 60, hits per 60, hits received per 60, and blocked shots per 60) as predictor variables.&lt;/p&gt;

&lt;h3 id=&#34;get-data-ready-for-modeling&#34;&gt;Get data ready for modeling&lt;/h3&gt;

&lt;p&gt;Our &lt;code&gt;final_data&lt;/code&gt; data frame from above will be the base of our &lt;code&gt;model_data&lt;/code&gt; (we&#39;re just removing two unnecessary variables), and we&#39;ll use &lt;code&gt;set.seed()&lt;/code&gt; to create reproducible samples.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Rearrange our model data&lt;/span&gt;

model_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; final_data &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(player, defense, &lt;span style=&#34;color:#a6e22e&#34;&gt;everything&lt;/span&gt;(), &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(games, TOI))

&lt;span style=&#34;color:#75715e&#34;&gt;# Set the seed (very useful for reproducible samples!)&lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Split into training and testing data&lt;/span&gt;

split_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initial_split&lt;/span&gt;(model_data, prop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.6&lt;/span&gt;, strata &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; defense)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The last line of code above, which created a list called &lt;code&gt;split_data&lt;/code&gt;, uses the helpful &lt;code&gt;initial_split&lt;/code&gt; function from the &lt;code&gt;rsample&lt;/code&gt; package. This allows us to create a training data set and a testing data set, an essential step when modeling. We will &lt;em&gt;train&lt;/em&gt; the data on one data set and then &lt;em&gt;test&lt;/em&gt; the models on a separate data set. You can set the proportion on your own, of how many observations will go to the training data, but it will default to 0.75 without a different specification. And why did I include &lt;code&gt;defense&lt;/code&gt; as an optional strata argument?&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;count.png&#34; &gt;
&lt;img src=&#34;count.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;p&gt;As you can see above, our data set has nearly twice the amount of forwards as defensemen. By using the &lt;code&gt;strata&lt;/code&gt; option, we can ensure that there&#39;s a similar proportion of forwards to defensemen in both our training and our testing data sets.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create our testing and training data sets&lt;/span&gt;

training_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;training&lt;/span&gt;(split_data)
testing_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;testing&lt;/span&gt;(split_data)

&lt;span style=&#34;color:#75715e&#34;&gt;# Write the recipe for our small TOI_only model&lt;/span&gt;

recipe_TOI_only &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; training_data &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;recipe&lt;/span&gt;(defense &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; TOI_game) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;step_center&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;all_predictors&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;step_scale&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;all_predictors&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;prep&lt;/span&gt;()

recipe_TOI_only&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the code above, we can create our basic training and test data sets and then move onto the useful functions of the &lt;code&gt;recipes&lt;/code&gt; package. This package allows you to create a &lt;em&gt;recipe&lt;/em&gt; in order to organize all of your processing steps for your model(s). You specify the arguments with the &lt;code&gt;recipe()&lt;/code&gt; function and then specify processing steps with the various functions that begin with step_. &lt;a href=&#34;https://cran.r-project.org/web/packages/recipes/vignettes/Simple_Example.html&#34; target=&#34;_blank&#34;&gt;There are dozens of these&lt;/a&gt; that will perform all sorts of functions (e.g., create dummy variables, input various values, take the log), but here we&#39;re just using &lt;code&gt;step_center()&lt;/code&gt; and &lt;code&gt;step_scale()&lt;/code&gt; to show you how to normalize variables. In order to specify variables for these step_ functions, you can use standard &lt;code&gt;dplyr::select&lt;/code&gt; variables (e.g., &lt;code&gt;starts_with()&lt;/code&gt;, &lt;code&gt;ends_with()&lt;/code&gt;) or select by role (e.g., &lt;code&gt;all_predictors()&lt;/code&gt;, &lt;code&gt;all_outcomes()&lt;/code&gt;) or select by data type (e.g., &lt;code&gt;all_numeric()&lt;/code&gt;). And you can of course select by variable name, as well.&lt;/p&gt;

&lt;p&gt;We now have a recipe called &lt;code&gt;recipe_TOI_only&lt;/code&gt; that looks like this.&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;recipe_TOI.png&#34; &gt;
&lt;img src=&#34;recipe_TOI.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;h3 id=&#34;run-our-models&#34;&gt;Run our models&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Extract our prepped training data &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# and &amp;#34;bake&amp;#34; our testing data&lt;/span&gt;

training_baked_TOI &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;juice&lt;/span&gt;(recipe_TOI_only)

testing_baked_TOI &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; recipe_TOI_only &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;bake&lt;/span&gt;(testing_data) 

&lt;span style=&#34;color:#75715e&#34;&gt;# Run the model with our training data&lt;/span&gt;

logistic_glm_TOI &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;logistic_reg&lt;/span&gt;(mode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;classification&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;set_engine&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;glm&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;fit&lt;/span&gt;(defense &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; ., data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; training_baked_TOI)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that we have our recipe, we can apply it to our training and testing data. Since the training data was the base of the recipe, we can use the &lt;code&gt;juice()&lt;/code&gt; function to extract it. And the &lt;code&gt;bake()&lt;/code&gt; function will prep the test data. Then, we can actually run the model with functions from the &lt;code&gt;parsnip&lt;/code&gt; package. The package handles many different kind of models, but here we&#39;re running a simple logistic regression and training it on our baked data.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Find the class predictions from our testing data&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# And add back in the true values from testing data&lt;/span&gt;

predictions_class_TOI &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; logistic_glm_TOI &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;predict&lt;/span&gt;(new_data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; testing_baked_TOI) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;bind_cols&lt;/span&gt;(testing_baked_TOI &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(defense))

&lt;span style=&#34;color:#75715e&#34;&gt;# Find the probability predictions&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# And add all together&lt;/span&gt;

predictions_TOI &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; logistic_glm_TOI &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;predict&lt;/span&gt;(testing_baked_TOI, type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prob&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;bind_cols&lt;/span&gt;(predictions_class_TOI)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that the model has been trained, we can apply it to the testing data. The data frame we just created, &lt;code&gt;predictions_TOI&lt;/code&gt;, looks like this. For each observation in our test data set, we have the predicted position and the probability that drove that prediction. We also brought in the &lt;code&gt;defense&lt;/code&gt; variable from the test data set.&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;TOI_example.png&#34; &gt;
&lt;img src=&#34;TOI_example.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;p&gt;Just for fun, we can bring the &lt;code&gt;player&lt;/code&gt; variable back from the original test data set and look at who was predicted the &lt;em&gt;most&lt;/em&gt; incorrectly.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Look at who was predicted the most incorrectly&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# (Just for fun)&lt;/span&gt;

most_wrong_TOI &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; predictions_TOI &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;bind_cols&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(testing_data, player, TOI_game)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(incorrect &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; .pred_class &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; defense) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(incorrect &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(prob_actual &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(defense &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;D&amp;#34;&lt;/span&gt;, .pred_D, .pred_F)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;arrange&lt;/span&gt;(prob_actual)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;













&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;incorrect_TOI.png&#34; &gt;
&lt;img src=&#34;incorrect_TOI.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;p&gt;As to be expected with such a simple model that&#39;s based solely on TOI, the predictions aren&#39;t so good for defensemen who don&#39;t play a lot of minutes or forwards who do. Let&#39;s move on to our kitchen sink model that includes all the variables.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Do the same process for our kitchen sink model&lt;/span&gt;

recipe_kitchen_sink &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; training_data &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;recipe&lt;/span&gt;(defense &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; weight &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; height &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; points_60 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; shots_60 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; fenwick_60 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; hits_60 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; hits_rec_60 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; blocks_60 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; TOI_game) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;step_corr&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;all_predictors&lt;/span&gt;(), threshold &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;step_center&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;all_predictors&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;step_scale&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;all_predictors&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;prep&lt;/span&gt;()

recipe_kitchen_sink

training_baked_KS &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;juice&lt;/span&gt;(recipe_kitchen_sink)

testing_baked_KS &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; recipe_kitchen_sink &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;bake&lt;/span&gt;(testing_data) 

&lt;span style=&#34;color:#75715e&#34;&gt;# Run the model with our training data&lt;/span&gt;

logistic_glm_KS &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;logistic_reg&lt;/span&gt;(mode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;classification&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;set_engine&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;glm&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;fit&lt;/span&gt;(defense &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; ., data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; training_baked_KS)

&lt;span style=&#34;color:#75715e&#34;&gt;# Find the class predictions from our testing data&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# And add back in the true values from testing data&lt;/span&gt;

predictions_class_KS &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; logistic_glm_KS &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;predict&lt;/span&gt;(new_data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; testing_baked_KS) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;bind_cols&lt;/span&gt;(testing_baked_KS &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(defense))

&lt;span style=&#34;color:#75715e&#34;&gt;# Find the probability predictions&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# And add all together&lt;/span&gt;

predictions_KS &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; logistic_glm_KS &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;predict&lt;/span&gt;(testing_baked_KS, type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prob&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;bind_cols&lt;/span&gt;(predictions_class_KS)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The code above looks very similar to the code from before, except we added an extra step in our recipe. The &lt;code&gt;step_corr()&lt;/code&gt; function will study all the correlations among variables you specify and remove offenders, as it often isn&#39;t a good idea to have variables in your model that are highly correlated with each other. The default threshold for exclusion is 0.9, but you can specify whatever value you want. As you can see in the recipe below, our recipe automatically removed the &lt;code&gt;shots_60&lt;/code&gt; variable, which is (obviously) very highly correlated to the unblocked shot attempt variable, &lt;code&gt;fenwick_60&lt;/code&gt;.&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;recipe_KS.png&#34; &gt;
&lt;img src=&#34;recipe_KS.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;h3 id=&#34;evaluate-our-models&#34;&gt;Evaluate our models&lt;/h3&gt;

&lt;p&gt;In this section, I&#39;m only going to show the code for one model (though we&#39;re evaluating two), but of course you would use the same code for both. (And if you were working with multiple models that you want to compare, it&#39;d be a good idea to create functions to do these steps so that you aren&#39;t copying and pasting.)&lt;/p&gt;

&lt;p&gt;First we can create a confusion matrix, which simply plots the predicted values against the actual values.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create a confusion matrix&lt;/span&gt;

predictions_TOI &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;conf_mat&lt;/span&gt;(defense, .pred_class) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;pluck&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;as_tibble&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(Prediction, Truth, alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; n)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_tile&lt;/span&gt;(show.legend &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_text&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; n), colour &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;, alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;meg_theme&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(panel.grid.major &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element_blank&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(
    y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Actual Position&amp;#34;&lt;/span&gt;,
    x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Predicted Position&amp;#34;&lt;/span&gt;,
    fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Confusion Matrix&amp;#34;&lt;/span&gt;,
    subtitle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TOI Only Model&amp;#34;&lt;/span&gt;
  )&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;













&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;conf_matrix_TOI.png&#34; &gt;
&lt;img src=&#34;conf_matrix_TOI.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;















&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;conf_mat_KS.png&#34; &gt;
&lt;img src=&#34;conf_mat_KS.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;p&gt;Just from a brief look at this, the kitchen sink model clearly has higher accuracy (calculated as the number of correct predictions divided by the number of total predictions) than the TOI only model.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Find the accuracy&lt;/span&gt;

predictions_TOI &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;accuracy&lt;/span&gt;(defense, .pred_class) 

&lt;span style=&#34;color:#75715e&#34;&gt;# Find the logloss&lt;/span&gt;

predictions_TOI &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mn_log_loss&lt;/span&gt;(defense, .pred_D)

&lt;span style=&#34;color:#75715e&#34;&gt;# Find the area under the ROC curve (AUC)&lt;/span&gt;

predictions_TOI &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;roc_auc&lt;/span&gt;(defense, .pred_D)

&lt;span style=&#34;color:#75715e&#34;&gt;# Create a tibble that holds all the evaluation metrics&lt;/span&gt;

TOI_metrics &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log_loss&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;mn_log_loss&lt;/span&gt;(predictions_TOI, defense, .pred_D) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(.estimate),
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;accuracy&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;accuracy&lt;/span&gt;(predictions_TOI, defense, .pred_class) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(.estimate),
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auc&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;roc_auc&lt;/span&gt;(predictions_TOI, defense, .pred_D) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(.estimate)
) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;unnest&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;everything&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;pivot_longer&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;everything&lt;/span&gt;(), names_to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;metric&amp;#34;&lt;/span&gt;, values_to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TOI_only&amp;#34;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;yardstick&lt;/code&gt; package is what holds a lot of these functions that are useful for model evaulation. We just defined accuracy, which you can calculate on your own from the confusion matrix and is also available via the &lt;code&gt;accuracy()&lt;/code&gt; function. That&#39;s useful for determining how good the model is in a binary sense, while log loss (from the &lt;code&gt;mn_log_loss()&lt;/code&gt; function) uses the probabilities to quantify how correct the predictions are. As an example, let&#39;s go back to our TOI only model and see that Aleksander Barkov (a forward) was given a 0.75 probability of being a defenseman. That&#39;s obviously incorrect. It&#39;s counted as an incorrect prediction for the accuracy metric, but log loss also takes into account that the prediction was &lt;em&gt;quite&lt;/em&gt; wrong. If the prediction had instead given him a 0.51 probability of being a defenseman, the penalty would be less.&lt;/p&gt;

&lt;p&gt;We can also create a tibble (a type of data frame) to hold all of these metrics. We&#39;ll use it to compare both models in a minute. The last metric included is the area under the ROC curve, known as AUC. The ROC curve graphs the false positive rate against the true positive rate and in a nutshell, quantifies how good the model is at distinguishing the groups.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;yardstick&lt;/code&gt; package also makes it really easy to graph the curve itself.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Look at the ROC curve&lt;/span&gt;

predictions_TOI &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;roc_curve&lt;/span&gt;(defense, .pred_D) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; specificity, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sensitivity)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_path&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_abline&lt;/span&gt;(lty &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;coord_equal&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;meg_theme&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(
    y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;True Positive Rate (Sensitivity)&amp;#34;&lt;/span&gt;,
    x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;False Positive Rate&amp;#34;&lt;/span&gt;,
    fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ROC Curve&amp;#34;&lt;/span&gt;,
    subtitle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TOI Only Model&amp;#34;&lt;/span&gt;
  )&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;













&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;ROC_TOi.png&#34; &gt;
&lt;img src=&#34;ROC_TOi.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;















&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;ROC_KS.png&#34; &gt;
&lt;img src=&#34;ROC_KS.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;p&gt;The ideal ROC curve is one that goes high up into the top left corner (as to maximize the area underneath it), so again, it appears that our kitchen sink model is performing better here. Lastly, let&#39;s use the tibbles we created to hold the evaulation metrics and graph to compare.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;metrics_compare &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; TOI_metrics &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;bind_rows&lt;/span&gt;(KS_metrics)
  
metrics_compare &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; model, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; metric)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_bar&lt;/span&gt;(position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dodge&amp;#34;&lt;/span&gt;, stat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;identity&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_fill_manual&lt;/span&gt;(values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#7A8B99&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#A9DDD6&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;meg_theme&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(
    y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Value&amp;#34;&lt;/span&gt;,
    x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Metric&amp;#34;&lt;/span&gt;,
    fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,
    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Comparing Our Models&amp;#34;&lt;/span&gt;,
    subtitle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Higher is Better: Accuracy and AUC\nLower is Better: Log Loss&amp;#34;&lt;/span&gt;
  ) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_text&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(value, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)), vjust &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;-0.5&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;position_dodge&lt;/span&gt;(width&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.9&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(legend.position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.86&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.9&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;













&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;compare.png&#34; &gt;
&lt;img src=&#34;compare.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;p&gt;We saw previously from the confusion matrices that the accuracy for the kitchen sink model is higher, and this tells us that the AUC is higher, as well, while the log loss is lower (which is good). Thanks to the evaluation metrics of the &lt;code&gt;yardstick&lt;/code&gt; package (and there are many more than the few we viewed!), we have evidence that compared to the TOI only model, the kitchen sink model makes more accurate predictions and is better at distinguishing between the groups.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tidymodels&lt;/code&gt; is a pretty neat set of packages, and I hope this little tutorial was useful in introducing some of the many features. Here are a handful of other resources I have found helpful as I continue to learn more about this package:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://juliasilge.com/blog/intro-tidymodels/&#34;&gt;https://juliasilge.com/blog/intro-tidymodels/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://towardsdatascience.com/modelling-with-tidymodels-and-parsnip-bae2c01c131c&#34;&gt;https://towardsdatascience.com/modelling-with-tidymodels-and-parsnip-bae2c01c131c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.benjaminsorensen.me/post/modeling-with-parsnip-and-tidymodels/&#34;&gt;https://www.benjaminsorensen.me/post/modeling-with-parsnip-and-tidymodels/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rviews.rstudio.com/2019/06/19/a-gentle-intro-to-tidymodels/&#34;&gt;https://rviews.rstudio.com/2019/06/19/a-gentle-intro-to-tidymodels/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Wrapping Up The Penalty Kill Project</title>
      <link>/post/pk_project/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      <guid>/post/pk_project/</guid>
      <description>&lt;p&gt;Last year, I tracked 1146 minutes of penalty kills, spread across 12 teams from the 2018-19 season. The teams were chosen semi-randomly (to get a decent distribution of shot attempt rates, both for and against), and games were selected randomly to end up with about a quarter of all penalty kill minutes for that team during 2018-19. I tracked zone time (so that I could track how well a penalty kill was able to keep a power play out of its offensive zone and also calculate shot rates for offensive zone time only), as well as zone entries and exits.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Selected Teams&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Chicago&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Colorado&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Dallas&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Winnipeg&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Vegas&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Edmonton&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Vancouver&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;New Jersey&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;NY Islanders&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;NY Rangers&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Philadelphia&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Florida&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The bulk of the penalty kill data is available in the &lt;a href=&#34;https://drive.google.com/file/d/1XjUKQn1yw7K_Rvdtv7h1FKcqkeQfN7q6/view&#34; target=&#34;_blank&#34;&gt;slides from my OTTHAC presentation&lt;/a&gt; and the &lt;a href=&#34;https://public.tableau.com/profile/balls.and.sticks#!/vizhome/DiscreteDefensiveStrategiesonthePenaltyKill/PK&#34; target=&#34;_blank&#34;&gt;data visualization that accompanied it&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;power-play-data&#34;&gt;Power play data&lt;/h3&gt;

&lt;p&gt;However, tracking penalty kills means I automatically have some data on power plays! I ended up with some data for all 31 teams, but here I have restricted the plots to the 11 teams for which I had the most data (60 to ~100 minutes). This isn&#39;t enough game time to make sweeping conclusions, but it&#39;s enough to look at a few graphs.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Selected Teams&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Buffalo&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Calgary&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Colorado&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Edmonton&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Florida&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Nashville&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ottawa&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Philadelphia&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;St. Louis&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Vancouver&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Washington&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Shown below is the percent of total power play time on ice that the power play spent in its offensive zone. I was surprised to see a relatively small spread in the percentages (besides Ottawa).&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;PP_OZ.png&#34; &gt;
&lt;img src=&#34;PP_OZ.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;p&gt;As I mentioned previously with the penalty kill data, having zone time makes it possible to calculate a per 60 shot rate (for unblocked shot attempts, in this case) that is based on offensive zone time only, instead of just total power play time on ice. This shows how frequently teams generate shots when they&#39;re actually in the zone.&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;PP_OZ_FF.png&#34; &gt;
&lt;img src=&#34;PP_OZ_FF.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;p&gt;It&#39;s interesting to contrast Ottawa and Colorado in these two graphs. Ottawa wasn&#39;t particularly successful at staying in the offensive zone, but when they were there, they generated a lot of unblocked shot attempts. Colorado was nearly the opposite, in that they spent a lot of time in the offensive zone but weren&#39;t as prolific with the shots. The &amp;quot;regular&amp;quot; unblocked shot attempt rates for the two teams over these games were nearly identical.&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;PP_OZ_dump.png&#34; &gt;
&lt;img src=&#34;PP_OZ_dump.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;p&gt;Lastly, since I tracked zone entry data, as well, we can look at how power play teams tended to enter their own zone by examining the percentage of all entries that were dump-ins versus carries and passes. In this smallish sample there was a wide variation between teams that tended to dump the puck in more (Nashville, Calgary) and teams that ver rarely did (Colorado, Ottawa).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Examining Score Effects on Special Teams</title>
      <link>/post/score-effects/</link>
      <pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/post/score-effects/</guid>
      <description>&lt;p&gt;Score effects in hockey are well-known, whether you&#39;re watching the game or looking at numbers: teams that are losing tend to generate a greater share of the shot attempts. Micah Blake McCurdy developed &lt;a href=&#34;https://www.hockeyviz.com/txt/senstats&#34; target=&#34;_blank&#34;&gt;an adjustment method&lt;/a&gt; for 5v5 events that is currently used to create the score- and venue-adjusted shot attempt metrics available at hockey stats websites like &lt;a href=&#34;http://www.naturalstattrick.com/&#34; target=&#34;_blank&#34;&gt;Natural Stat Trick&lt;/a&gt;
and &lt;a href=&#34;https://evolving-hockey.com/&#34; target=&#34;_blank&#34;&gt;Evolving Hockey&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Since I spend a lot of time looking at special teams data, I have long been curious as to whether score effects might also be a factor for power plays. Here, I&#39;ve modified Micah&#39;s method to investigate score effects at 5v4: I created the weights, compared them to the 5v5 weights, and examined the repeatability and predictivity of the adjusted values compared to the raw ones. Investigating this problem taught me a lot of new R skills, so I&#39;ve included all code and will go through the process step-by-step. (So if you&#39;re only interested in the conclusion, just scroll past the code and look at the graphs!)&lt;/p&gt;

&lt;h3 id=&#34;get-and-prepare-the-data&#34;&gt;Get and prepare the data&lt;/h3&gt;

&lt;p&gt;To start, I used the play-by-play query tool available at &lt;a href=&#34;https://evolving-hockey.com/&#34; target=&#34;_blank&#34;&gt;Evolving Hockey&lt;/a&gt; to collect all power play events from the past 10 seasons. (This was much quicker than scraping full seasons of data, and if you&#39;d like access to the tool, support them on &lt;a href=&#34;https://www.patreon.com/evolvinghockey/&#34; target=&#34;_blank&#34;&gt;Patreon&lt;/a&gt;.) With all of the files in the same folder, instead of reading them in one-by-one, some functions from the plyr package make it easier to read them all in and combine them into one file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(plyr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(readr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(infer)

&lt;span style=&#34;color:#75715e&#34;&gt;# All 10 of my csv files (one for each season) are in a folder in my wd called &amp;#34;score_adj&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# This will ID all the files and read them in as one file (score_adj_5v4_raw)&lt;/span&gt;

mydir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;score_adj&amp;#34;&lt;/span&gt;
myfiles &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list.files&lt;/span&gt;(path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mydir, pattern&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*.csv&amp;#34;&lt;/span&gt;, full.names&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
myfiles

score_adj_5v4_raw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ldply&lt;/span&gt;(myfiles, read_csv)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I filtered down to only the events that I want (all unblocked shot attempts as well as any events with time, so I can create rates) and created some new variables. Per Micah&#39;s method, all leads over 2 and below -2 were grouped.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# We&amp;#39;ll filter down to only unblocked shot attempts and time events (to get fenwick &amp;amp; rates)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# And also create variables to get the home lead and an indicator whether the event is home or away&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# For home lead, everything above 2 and below -2 will be grouped together&lt;/span&gt;

score_adj_5v4 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; score_adj_5v4_raw &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(event_type &lt;span style=&#34;color:#f92672&#34;&gt;%in%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SHOT&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GOAL&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MISS&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; event_length &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(home_lead &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; home_score &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; away_score,
         home_lead &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(home_lead &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;-3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;-3&lt;/span&gt;,
                            &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(home_lead &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, home_lead)),
         home_away &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(event_team &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; home_team, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;home&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;away&amp;#34;&lt;/span&gt;),
         fenwick &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(event_type &lt;span style=&#34;color:#f92672&#34;&gt;%in%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SHOT&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GOAL&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MISS&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
         goal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(event_type &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GOAL&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
         PP_team &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(game_strength_state &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;5v4&amp;#34;&lt;/span&gt;, home_team, away_team),
         type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(fenwick &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; PP_team &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; event_team, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PP&amp;#34;&lt;/span&gt;, 
                       &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(fenwick &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PK&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;)),
         PP_fenwick &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(type &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PP&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; fenwick &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
         f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(PP_fenwick &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Y&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(type, PP_fenwick, f, game_strength_state, home_team, away_team, PP_team, event_team, &lt;span style=&#34;color:#a6e22e&#34;&gt;everything&lt;/span&gt;())
  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;create-the-weights&#34;&gt;Create the weights&lt;/h3&gt;

&lt;p&gt;The first step is to determine what the weights should be. In our raw data, all unblocked shot attempts count the same: as one. But they are not all truly equal since we know that trailing teams generate more shot attempts. If the team that is currently winning by two goals generates a shot attempt, for example, that should count as &lt;em&gt;more than one&lt;/em&gt; shot attempt because it&#39;s more difficult. And vice versa for the team that is currently losing. We can calculate how much these shot attempts should be boosted or penalized by comparing the actual values to the average values (i.e., if there was no difference).&lt;/p&gt;

&lt;p&gt;The first data frame below, &lt;code&gt;score_adj_f&lt;/code&gt;, just sums the unblocked shot attempts for each state to give us the raw values. (You&#39;ll see that the lockout-shortened season is filtered out, we&#39;ll discuss why later.) The second data frame &lt;code&gt;score_adj_f_avg&lt;/code&gt; sums unblocked shot attempts for each &lt;em&gt;score state&lt;/em&gt; only. Those average values get joined back into the first data frame, and then we can create a weight by dividing the true value by the average. &lt;code&gt;score_adj_f_reshape&lt;/code&gt; just uses the &lt;code&gt;pivot_wider&lt;/code&gt; function to reshape the values to make them more readable.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# We filter by power play fenwick events only, then&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# group by home_away and home_lead&lt;/span&gt;

score_adj_f &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; score_adj_5v4 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(PP_fenwick &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(season &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20122013&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(home_lead, home_away, f) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;summarize&lt;/span&gt;(fenwick &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(PP_fenwick))

&lt;span style=&#34;color:#75715e&#34;&gt;# Group by home_lead to get the average fenwicks&lt;/span&gt;

score_adj_f_avg &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; score_adj_f &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(home_lead) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;summarize&lt;/span&gt;(avg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mean&lt;/span&gt;(fenwick))

&lt;span style=&#34;color:#75715e&#34;&gt;# Join the average back into the previous data frame&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# and create the adjusted score by dividing the average by the raw fenwick&lt;/span&gt;

score_adj_f &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; score_adj_f &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;left_join&lt;/span&gt;(score_adj_f_avg, by &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;home_lead&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(fenwick_adj &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; avg &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; fenwick)

&lt;span style=&#34;color:#75715e&#34;&gt;# Reshape to get the numbers in a more readable format&lt;/span&gt;

score_adj_f_reshape &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; score_adj_f &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(avg, fenwick)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;pivot_wider&lt;/span&gt;(names_from &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; home_away, values_from &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fenwick_adj) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(home_lead, home, away)
  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is what the &lt;code&gt;score_adj_f&lt;/code&gt; data frame looks like before we reshape it for easier analysis. &lt;code&gt;fenwick&lt;/code&gt; has the raw values, &lt;code&gt;avg&lt;/code&gt; has the average values, and &lt;code&gt;fenwick_adj&lt;/code&gt; has the weights (found by dividing &lt;code&gt;avg&lt;/code&gt; by &lt;code&gt;fenwick&lt;/code&gt;).&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;adj_avg.png&#34; &gt;
&lt;img src=&#34;adj_avg.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;p&gt;And this is what it looks like after.&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;adj.png&#34; &gt;
&lt;img src=&#34;adj.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;h3 id=&#34;compare-to-5v5-weights&#34;&gt;Compare to 5v5 weights&lt;/h3&gt;

&lt;p&gt;Now that we have our weights (shown above), we can compare to Micah&#39;s established weights for 5v5 events.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Read in Micah&amp;#39;s 5v5 values&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# And join to compare&lt;/span&gt;

score_adj_5v5 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_csv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;score_adj_5v5_MBM.csv&amp;#34;&lt;/span&gt;)

score_adj_f_reshape_compare &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; score_adj_f_reshape &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;left_join&lt;/span&gt;(score_adj_5v5, by &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;home_lead&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(diff_home &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; home &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; home_5v5,
         diff_away &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; away &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; away_5v5)

&lt;span style=&#34;color:#75715e&#34;&gt;# Create simple bar graphs to compare&lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; score_adj_f_reshape_compare, 
       &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.factor&lt;/span&gt;(home_lead), y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; diff_home)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_bar&lt;/span&gt;(stat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;identity&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Home Event Weights, 5v4 vs 5v5&amp;#34;&lt;/span&gt;, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Home Lead&amp;#34;&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Difference From 5v5 Weight&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_linedraw&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(axis.ticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element_blank&lt;/span&gt;())

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; score_adj_f_reshape_compare, 
       &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.factor&lt;/span&gt;(home_lead), y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; diff_away)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_bar&lt;/span&gt;(stat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;identity&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Away Event Weights, 5v4 vs 5v5&amp;#34;&lt;/span&gt;, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Home Lead&amp;#34;&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Difference From 5v5 Weight&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_linedraw&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(axis.ticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element_blank&lt;/span&gt;())
  
for_comparison &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; score_adj_f_reshape_compare &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(diff_home&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;diff_away)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;rename&lt;/span&gt;(home_5v4 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; home,
         away_5v4 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; away) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;pivot_longer&lt;/span&gt;(home_5v4&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;away_5v5, names_to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;, values_to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(home_away &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;substr&lt;/span&gt;(type, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;),
         state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;substr&lt;/span&gt;(type, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;))

for_comparison &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(home_away &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;home&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; state, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(home_lead), y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_bar&lt;/span&gt;(stat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;identity&amp;#34;&lt;/span&gt;, position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dodge&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Home Event Weights, 5v4 vs 5v5&amp;#34;&lt;/span&gt;, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Home Lead&amp;#34;&lt;/span&gt;, 
       y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Weight&amp;#34;&lt;/span&gt;, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;State?&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_linedraw&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(axis.ticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element_blank&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_hline&lt;/span&gt;(yintercept &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_fill_manual&lt;/span&gt;(values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#CF8BA8&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#DDDDDD&amp;#34;&lt;/span&gt;))

for_comparison &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(home_away &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;away&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; state, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(home_lead), y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_bar&lt;/span&gt;(stat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;identity&amp;#34;&lt;/span&gt;, position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dodge&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Away Event Weights, 5v4 vs 5v5&amp;#34;&lt;/span&gt;, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Home Lead&amp;#34;&lt;/span&gt;, 
       y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Weight&amp;#34;&lt;/span&gt;, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;State?&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_linedraw&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(axis.ticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element_blank&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_hline&lt;/span&gt;(yintercept &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_fill_manual&lt;/span&gt;(values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#CF8BA8&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#DDDDDD&amp;#34;&lt;/span&gt;))
  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;













&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;score_adj_compare_away.png&#34; &gt;
&lt;img src=&#34;score_adj_compare_away.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;















&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;score_adj_compare_home.png&#34; &gt;
&lt;img src=&#34;score_adj_compare_home.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;















&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;compare_home.png&#34; &gt;
&lt;img src=&#34;compare_home.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;















&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;compare_away.png&#34; &gt;
&lt;img src=&#34;compare_away.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;p&gt;We can see from these comparisons that overall, the magnitude of these 5v4 weights is not too different from those at 5v5. The largest difference is when the home team is trailing by one: the 5v5 weight for the away team is 1.103. At 5v4, the weight for the away team is 1.221. (Interestingly, when the home team is &lt;em&gt;leading&lt;/em&gt; by one, the weights are nearly identical.) This difference fits the overall pattern that you can see in the graphs: the weights for the away team at 5v4 are consistently higher than they are at 5v5, regardless of the score state, and vice versa for the home team. This could suggest that events for the home team are slightly easier to generate at 5v4, regardless of score state, and therefore the away team gets more &amp;quot;credit&amp;quot; (i.e., a higher weight) for their events.&lt;/p&gt;

&lt;p&gt;Our last step, before we can test the repeatability and prediction of the weights, is to join these adjusted values back into the raw event data so we can use them for comparison.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Join the adjusted values back into the raw data&lt;/span&gt;

score_adj_5v4_w_values &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; score_adj_5v4 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;left_join&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(score_adj_f, home_lead, home_away, fenwick_adj, f), by &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;home_lead&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;home_away&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f&amp;#34;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;testing-repeatability-and-prediction&#34;&gt;Testing repeatability and prediction&lt;/h3&gt;

&lt;p&gt;To examine these adjusted values in comparison to the raw ones, we&#39;ll look at both &lt;em&gt;repeatability&lt;/em&gt; and &lt;em&gt;prediction&lt;/em&gt;. Repeatability is measured by how well the unblocked shot attempts in one sample of a season correlate to those in another sample, and prediction looks at how well the unblocked shot attempts in one sample correlate to &lt;em&gt;goals&lt;/em&gt; in another.  Our metric of interest in both cases will be R&lt;sup&gt;2&lt;/sup&gt;, and we&#39;re curious to see whether those R&lt;sup&gt;2&lt;/sup&gt; values are &lt;em&gt;higher&lt;/em&gt; for the adjusted values.&lt;/p&gt;

&lt;p&gt;The first step is to create the data set, &lt;code&gt;sampling_team&lt;/code&gt;, that we&#39;ll use for sampling purposes. (Again, we&#39;ll filter out the lockout-shortened season.) We&#39;ll group by &lt;code&gt;game_id&lt;/code&gt; as well as &lt;code&gt;PP_team&lt;/code&gt; and summarize the raw fenwick values, adjusted fenwick values, goals, and total TOI. We&#39;ll also create a unique identifier of &lt;code&gt;team_season&lt;/code&gt; that will be important for sampling purposes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Testing repeatability and prediction----&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# We&amp;#39;ll test repeatability of the adjusted values, compared to the raw ones&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# But we&amp;#39;ll be removing the shortened season&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Group by game, season, and team; sum values&lt;/span&gt;

sampling_team &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; score_adj_5v4_w_values &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(game_id, season, PP_team, PP_fenwick, fenwick_adj, event_length, goal) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(season &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20122013&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(season, game_id, PP_team) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;summarize&lt;/span&gt;(fenwick &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(PP_fenwick, na.rm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;),
            fen_adj &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(fenwick_adj, na.rm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;),
            goals &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(goal),
            TOI &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(event_length) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;unite&lt;/span&gt;(team_season, season, PP_team, sep &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;, remove &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That &lt;code&gt;sampling_team&lt;/code&gt; data frame will be the starting point for the sampling function I wrote that&#39;s based on the &lt;code&gt;rep_sample_n&lt;/code&gt; function in the &lt;code&gt;infer&lt;/code&gt; package. In a nutshell, the function below will do the following: filter the &lt;code&gt;sampling_team&lt;/code&gt; data frame to a specific &lt;code&gt;team_season&lt;/code&gt;; take a sample of &lt;code&gt;x&lt;/code&gt; number of games; split that sample into two groups; sum the unblocked shot attempts (both raw and adjusted), goals, and TOI in each group; and repeat 1000 times. The &lt;code&gt;pivot_wider&lt;/code&gt; function at the end will just reshape the data into a format that&#39;s easier to use later.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# The function below will filter by teamseason, sample a specified amount of games, &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# split into two groups, sum fenwick and fen_adj, repeat 1000 times per season&lt;/span&gt;

sampling_fn &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(value, samplesize) {
  
  sampling_team_done &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sampling_team &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(team_season &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; value) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;rep_sample_n&lt;/span&gt;(size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; samplesize, replace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, reps &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(replicate, team_season) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(game_no &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;row_number&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(group &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; game_no &lt;span style=&#34;color:#f92672&#34;&gt;%%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(samplesize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; samplesize) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(replicate, group, team_season, samplesize) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;summarize&lt;/span&gt;(fenwick &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(fenwick, na.rm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;),
              fen_adj &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(fen_adj, na.rm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;),
              TOI &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(TOI),
              goals &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(goals)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(f_60 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fenwick &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; TOI,
           f_adj_60 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fen_adj &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; TOI,
           goal_60 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; goals &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; TOI) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;pivot_wider&lt;/span&gt;(names_from &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; group, values_from &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(fenwick, fen_adj, TOI, f_60, f_adj_60,
                                                    goals, goal_60))
  
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once the function is written, we need to apply it! You can see that our &lt;code&gt;sampling_fn&lt;/code&gt; function requires two arguments to be supplied: &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;samplesize&lt;/code&gt;. The &lt;code&gt;value&lt;/code&gt; is each individual team season, since we want the function to run over each one separately. And I was curious to see how the results vary by the sample size chosen, so the code below will run separately for sample sizes of 40, 50, 60, and 70 games. Micah&#39;s 5v5 method was tested with sample sizes of 40 games, but since 5v4 time is comparatively much more rare, I wanted to test larger sample sizes as well. (This is why we eliminated the lockout-shortened season, which only had 48 games.)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;lapply&lt;/code&gt; is a very useful function that will perform the &lt;code&gt;sampling_fn&lt;/code&gt;, with the selected &lt;code&gt;samplesize&lt;/code&gt;, over each unique value of &lt;code&gt;team_season&lt;/code&gt; from the &lt;code&gt;sampling_team&lt;/code&gt; data frame. And the &lt;code&gt;bind_rows&lt;/code&gt; function will collect all of the function results into one data frame.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Run the function for the various sample sizes&lt;/span&gt;

summary_team &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lapply&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(sampling_team&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;team_season), sampling_fn, samplesize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;)
sampling_team_40 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bind_rows&lt;/span&gt;(summary_team, .id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;column_label&amp;#34;&lt;/span&gt;)

summary_team &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lapply&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(sampling_team&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;team_season), sampling_fn, samplesize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;)
sampling_team_50 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bind_rows&lt;/span&gt;(summary_team, .id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;column_label&amp;#34;&lt;/span&gt;)

summary_team &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lapply&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(sampling_team&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;team_season), sampling_fn, samplesize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;)
sampling_team_60 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bind_rows&lt;/span&gt;(summary_team, .id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;column_label&amp;#34;&lt;/span&gt;)

summary_team &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lapply&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(sampling_team&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;team_season), sampling_fn, samplesize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;)
sampling_team_70 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bind_rows&lt;/span&gt;(summary_team, .id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;column_label&amp;#34;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I will end up with four data frames, &lt;code&gt;sampling_team_40&lt;/code&gt; through &lt;code&gt;sampling_team_70&lt;/code&gt; that are all the same size. Here is a sample:&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;sampling_team.png&#34; &gt;
&lt;img src=&#34;sampling_team.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;p&gt;&lt;code&gt;replicate&lt;/code&gt; indicates which sample it is (each individual &lt;code&gt;team_season&lt;/code&gt; has 1000) and the &lt;code&gt;_0&lt;/code&gt; and &lt;code&gt;_1&lt;/code&gt; appended to each metric show the two separate groups. For example, the first row here is one sample of 40 games from the Bruins&#39; 2009-10 season. Those 40 games were divided into two groups: the first group had 111 total unblocked shot attempts, and the second group had 132. Having the data structured this way will allow us to easily calculate the correlations.&lt;/p&gt;

&lt;p&gt;We&#39;ll create another function to do so, called &lt;code&gt;correlations&lt;/code&gt;, and use the &lt;code&gt;lapply&lt;/code&gt; function again to apply that function over our four data frames.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;correlations &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(df) {
  
  correlation &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; df &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(samplesize) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;summarize&lt;/span&gt;(raw_f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(fenwick_0, fenwick_1) ^ &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
            adj_f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(fen_adj_0, fen_adj_1) ^ &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
            raw_rate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(f_60_0, f_60_1) ^ &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
            adj_rate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(f_adj_60_0, f_adj_60_1) ^ &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
            raw_f_pred &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(fenwick_0, goals_1) ^ &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
            adj_f_pred &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(fen_adj_0, goals_1) ^ &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
            raw_rate_pred &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(f_60_0, goal_60_1) ^ &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
            adj_rate_pred &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(f_adj_60_0, goal_60_1) ^ &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
  
}

cor_all &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lapply&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(sampling_team_40, sampling_team_50, sampling_team_60, sampling_team_70), correlations)
cor &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bind_rows&lt;/span&gt;(cor_all)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That will result in a very simple data frame that looks like this:&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;correlations.png&#34; &gt;
&lt;img src=&#34;correlations.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;p&gt;And we can reshape that data to more easily create some graphs.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create graphs to compare----&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Reshape data to make it easier&lt;/span&gt;

cor_reshape &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; cor &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;pivot_longer&lt;/span&gt;(raw_f&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;adj_rate_pred, names_to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;metric&amp;#34;&lt;/span&gt;, values_to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;R2&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;substr&lt;/span&gt;(metric, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;arrange&lt;/span&gt;(type) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(type, levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;raw&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;adj&amp;#34;&lt;/span&gt;)))

cor_reshape &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(metric &lt;span style=&#34;color:#f92672&#34;&gt;%in%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;raw_f&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;adj_f&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; type, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; samplesize, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; R2)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_bar&lt;/span&gt;(stat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;identity&amp;#34;&lt;/span&gt;, position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dodge&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Repeatability: Unblocked Shot Attempts&amp;#34;&lt;/span&gt;, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sample Size&amp;#34;&lt;/span&gt;, 
       y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;R-Squared&amp;#34;&lt;/span&gt;, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Adjusted?&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_linedraw&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(axis.ticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element_blank&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_text&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(R2, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)), position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;position_dodge&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;),  vjust &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;-0.5&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_fill_manual&lt;/span&gt;(values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#DDDDDD&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#CF8BA8&amp;#34;&lt;/span&gt;))

cor_reshape &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(metric &lt;span style=&#34;color:#f92672&#34;&gt;%in%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;raw_rate&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;adj_rate&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; type, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; samplesize, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; R2)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_bar&lt;/span&gt;(stat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;identity&amp;#34;&lt;/span&gt;, position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dodge&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Repeatability: Unblocked Shot Attempt Rate&amp;#34;&lt;/span&gt;, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sample Size&amp;#34;&lt;/span&gt;, 
       y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;R-Squared&amp;#34;&lt;/span&gt;, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Adjusted?&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_linedraw&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(axis.ticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element_blank&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_text&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(R2, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)), position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;position_dodge&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;),  vjust &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;-0.5&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_fill_manual&lt;/span&gt;(values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#DDDDDD&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#CF8BA8&amp;#34;&lt;/span&gt;))

cor_reshape &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(metric &lt;span style=&#34;color:#f92672&#34;&gt;%in%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;raw_rate_pred&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;adj_rate_pred&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; type, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; samplesize, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; R2)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_bar&lt;/span&gt;(stat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;identity&amp;#34;&lt;/span&gt;, position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dodge&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Predictivity: Unblocked Shot Attempt Rate&amp;#34;&lt;/span&gt;, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sample Size&amp;#34;&lt;/span&gt;, 
       y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;R-Squared&amp;#34;&lt;/span&gt;, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Adjusted?&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_linedraw&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(axis.ticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element_blank&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_text&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(R2, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)), position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;position_dodge&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;),  vjust &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;-0.5&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_fill_manual&lt;/span&gt;(values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#DDDDDD&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#CF8BA8&amp;#34;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The two figures below show the R&lt;sup&gt;2&lt;/sup&gt; values for raw and adjusted values, by sample size, for the unblocked shot attempts and the unblocked shot attempt &lt;em&gt;rate&lt;/em&gt;, respectively. As expected, the correlation increases along with the sample size. And although none of the R&lt;sup&gt;2&lt;/sup&gt; values are particularly large, they are consistently higher for the adjusted values. (As a comparison, Micah found a R&lt;sup&gt;2&lt;/sup&gt; value of 0.530 for a similar test with 5v5 adjusted values.)&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;repeat_raw.png&#34; &gt;
&lt;img src=&#34;repeat_raw.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;















&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;repeat_rate.png&#34; &gt;
&lt;img src=&#34;repeat_rate.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;p&gt;Also as expected, the R&lt;sup&gt;2&lt;/sup&gt; value is much smaller when we look at prediction: how the unblocked shot attempt rate in one group predicts the goal rate in another group. Again as comparison: Micah used goal percentage instead for his prediction test and found a R&lt;sup&gt;2&lt;/sup&gt; value of 0.113.&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;pred_rate.png&#34; &gt;
&lt;img src=&#34;pred_rate.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;p&gt;My personal conclusion is that there appears to be some value from adjusting for score effects at 5v4, but I&#39;m not sure it&#39;s enough to recommend score adjustment as common practice. For context, I&#39;d also like to explore further into how score effects might affect the rate of drawing or taking penalties.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An Introduction to R With Hockey Data</title>
      <link>/post/r-tutorial/</link>
      <pubDate>Wed, 11 Dec 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-tutorial/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://hockey-graphs.com/&#34;&gt;&lt;em&gt;From Hockey-Graphs&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have written a couple articles over the past few months on using R with hockey data (see here and here), but both of those articles were focused on intermediate techniques and presumed beginner knowledge of R. In contrast, this article is for the complete beginner. We’ll go through the steps of downloading and setting up R and then, with the use of a sample hockey data set, learn the very basics of R for exploring and visualizing data.&lt;/p&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click &lt;a href=&#34;https://hockey-graphs.com/2019/12/11/an-introduction-to-r-with-hockey-data/&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt; to read the rest of this article on Hockey-Graphs and &lt;a href=&#34;https://github.com/hockey-graphs/HG_intro_tutorial/blob/master/HG_tutorial_code.R&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt; to see the code on Github.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>So You Want to Make a Hockey Data Viz?</title>
      <link>/post/medium/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/medium/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://medium.com/nightingale&#34;&gt;&lt;em&gt;From Nightingale, the journal of the Data Visualization Society&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As the 2019–20 NHL hockey season kicks off, Tableau data-vizzists (data visualizers? data viz artisans?) Meghan Hall and Sean Tierney took some time to discuss how they got started with visualizations in hockey, their processes for creating interactive charts, and what they see as the future of data visualization for the NHL.&lt;/p&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click &lt;a href=&#34;https://medium.com/nightingale/so-you-want-to-make-a-hockey-data-viz-dda7b347f117&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt; to read the rest of this article on Medium.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Exploratory Data Analysis Using Tidyverse</title>
      <link>/post/r-article-2/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-article-2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://hockey-graphs.com/&#34;&gt;&lt;em&gt;From Hockey-Graphs&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Welcome to the second article in our series on basic data cleaning and data manipulation! In this article, we’re going to use play-by-play data from two NHL games and answer two questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; checked=&#34;&#34; disabled=&#34;&#34;&gt; which power play unit generated the best shot rate in each game?&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; checked=&#34;&#34; disabled=&#34;&#34;&gt; which defenseman played the most 5v5 minutes in each game?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the process of doing so, we’ll cover several topics of basic data manipulation in the tidyverse, including using functions, creating joins, grouping and summarizing data, and working with string data.&lt;/p&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click &lt;a href=&#34;https://hockey-graphs.com/2019/10/08/exploratory-data-analysis-using-tidyverse/&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt; to read the rest of this article on Hockey-Graphs and &lt;a href=&#34;https://github.com/hockey-graphs/hg-data-cleaning&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt; to see the code on Github.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Combining Manually-Tracked Data with Play-by-Play Data</title>
      <link>/post/r-article-1/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-article-1/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://hockey-graphs.com/&#34;&gt;&lt;em&gt;From Hockey-Graphs&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A tutorial on how to combine NHL play-by-play data with manually-tracked data, with the help of the &lt;code&gt;padr&lt;/code&gt; package in R.&lt;/p&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click &lt;a href=&#34;https://hockey-graphs.com/2019/09/19/combining-manually-tracked-data-with-play-by-play-data/&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt; to read this article on Hockey-Graphs.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Writing technical content in Academic</title>
      <link>/post/writing-technical-content/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      <guid>/post/writing-technical-content/</guid>
      <description>&lt;p&gt;Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Highlight your code snippets, take notes on math classes, and draw diagrams from textual representation.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On this page, you&#39;ll find some examples of the types of technical content that can be rendered with Academic.&lt;/p&gt;

&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;h3 id=&#34;code&#34;&gt;Code&lt;/h3&gt;

&lt;p&gt;Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the &lt;code&gt;highlight&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```python
import pandas as pd
data = pd.read_csv(&amp;#34;data.csv&amp;#34;)
data.head()
```&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data.csv&amp;#34;&lt;/span&gt;)
data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;math&#34;&gt;Math&lt;/h3&gt;

&lt;p&gt;Academic supports a Markdown extension for $\LaTeX$ math. You can enable this feature by toggling the &lt;code&gt;math&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file and adding &lt;code&gt;markup: mmark&lt;/code&gt; to your page front matter.&lt;/p&gt;

&lt;p&gt;To render &lt;em&gt;inline&lt;/em&gt; or &lt;em&gt;block&lt;/em&gt; math, wrap your LaTeX math with &lt;code&gt;$$...$$&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Example &lt;strong&gt;math block&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-tex&#34; data-lang=&#34;tex&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$$&lt;/span&gt;\gamma_{n} &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; \frac{ 
\left | \left &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;\mathbf x_{n} &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; \mathbf x_{n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;} \right &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;^T 
\left &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;\nabla F &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;\mathbf x_{n}&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; \nabla F &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;\mathbf x_{n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; \right &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; \right |}
{\left \|\nabla F&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;\mathbf{x}_{n}&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; \nabla F&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;\mathbf{x}_{n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; \right \|^&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;$$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;renders as&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[\gamma_{n} = \frac{ \left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T \left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}{\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2}\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Example &lt;strong&gt;inline math&lt;/strong&gt; &lt;code&gt;$$\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2$$&lt;/code&gt; renders as &lt;span  class=&#34;math&#34;&gt;\(\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2\)&lt;/span&gt; .&lt;/p&gt;

&lt;p&gt;Example &lt;strong&gt;multi-line math&lt;/strong&gt; using the &lt;code&gt;\\&lt;/code&gt; math linebreak:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-tex&#34; data-lang=&#34;tex&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$$&lt;/span&gt;f&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;k;p_&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;*)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; \begin{cases} p_&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &amp;amp; \text{if }k&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, \\
&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;p_&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &amp;amp; \text {if }k&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.\end{cases}&lt;span style=&#34;color:#e6db74&#34;&gt;$$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;renders as&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[f(k;p_0^*) = \begin{cases} p_0^* &amp; \text{if }k=1, \\
1-p_0^* &amp; \text {if }k=0.\end{cases}\]&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&#34;diagrams&#34;&gt;Diagrams&lt;/h3&gt;

&lt;p&gt;Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the &lt;code&gt;diagram&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file or by adding &lt;code&gt;diagram: true&lt;/code&gt; to your page front matter.&lt;/p&gt;

&lt;p&gt;An example &lt;strong&gt;flowchart&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
graph TD;
  A--&amp;gt;B;
  A--&amp;gt;C;
  B--&amp;gt;D;
  C--&amp;gt;D;
```&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TD;
  A--&amp;gt;B;
  A--&amp;gt;C;
  B--&amp;gt;D;
  C--&amp;gt;D;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;sequence diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
sequenceDiagram
  participant Alice
  participant Bob
  Alice-&amp;gt;John: Hello John, how are you?
  loop Healthcheck
      John-&amp;gt;John: Fight against hypochondria
  end
  Note right of John: Rational thoughts &amp;lt;br/&amp;gt;prevail...
  John--&amp;gt;Alice: Great!
  John-&amp;gt;Bob: How about you?
  Bob--&amp;gt;John: Jolly good!
```&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;sequenceDiagram
  participant Alice
  participant Bob
  Alice-&amp;gt;John: Hello John, how are you?
  loop Healthcheck
      John-&amp;gt;John: Fight against hypochondria
  end
  Note right of John: Rational thoughts &amp;lt;br/&amp;gt;prevail...
  John--&amp;gt;Alice: Great!
  John-&amp;gt;Bob: How about you?
  Bob--&amp;gt;John: Jolly good!&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;Gantt diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
gantt
  dateFormat  YYYY-MM-DD
  section Section
  A task           :a1, 2014-01-01, 30d
  Another task     :after a1  , 20d
  section Another
  Task in sec      :2014-01-12  , 12d
  another task      : 24d
```&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;gantt
  dateFormat  YYYY-MM-DD
  section Section
  A task           :a1, 2014-01-01, 30d
  Another task     :after a1  , 20d
  section Another
  Task in sec      :2014-01-12  , 12d
  another task      : 24d&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;todo-lists&#34;&gt;Todo lists&lt;/h3&gt;

&lt;p&gt;You can even write your todo lists in Academic too:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;- [x]&lt;/span&gt; Write math example
&lt;span style=&#34;color:#66d9ef&#34;&gt;- [x]&lt;/span&gt; Write diagram example
- [ ] Do something else&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;renders as&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; checked=&#34;&#34; disabled=&#34;&#34;&gt; Write math example&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; checked=&#34;&#34; disabled=&#34;&#34;&gt; Write diagram example&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled=&#34;&#34;&gt; Do something else&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;tables&#34;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Represent your data in tables:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;| First Header  | Second Header |
| ------------- | ------------- |
| Content Cell  | Content Cell  |
| Content Cell  | Content Cell  |&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;renders as&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Header&lt;/th&gt;
&lt;th&gt;Second Header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;asides&#34;&gt;Asides&lt;/h3&gt;

&lt;p&gt;Academic supports a Markdown extension for asides, also referred to as &lt;em&gt;notices&lt;/em&gt; or &lt;em&gt;hints&lt;/em&gt;. By prefixing a paragraph with &lt;code&gt;A&amp;gt;&lt;/code&gt;, it will render as an aside. You can enable this feature by adding &lt;code&gt;markup: mmark&lt;/code&gt; to your page front matter, or alternatively using the &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/#alerts&#34;&gt;&lt;em&gt;Alert&lt;/em&gt; shortcode&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;A&amp;gt; A Markdown aside is useful for displaying notices, hints, or definitions to your readers.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;renders as&lt;/p&gt;

&lt;aside&gt;
&lt;p&gt;A Markdown aside is useful for displaying notices, hints, or definitions to your readers.&lt;/p&gt;
&lt;/aside&gt;

&lt;h3 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>Display Jupyter Notebooks with Academic</title>
      <link>/post/jupyter/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>/post/jupyter/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; IPython.core.display &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Image
Image(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;./index_1_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Welcome to Academic!&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Welcome to Academic!
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;install-python-and-jupyterlab&#34;&gt;Install Python and JupyterLab&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.anaconda.com/distribution/#download-section&#34;&gt;Install Anaconda&lt;/a&gt; which includes Python 3 and JupyterLab.&lt;/p&gt;
&lt;p&gt;Alternatively, install JupyterLab with &lt;code&gt;pip3 install jupyterlab&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;create-or-upload-a-jupyter-notebook&#34;&gt;Create or upload a Jupyter notebook&lt;/h2&gt;
&lt;p&gt;Run the following commands in your Terminal, substituting &lt;code&gt;&amp;lt;MY-WEBSITE-FOLDER&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;SHORT-POST-TITLE&amp;gt;&lt;/code&gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mkdir -p &amp;lt;MY-WEBSITE-FOLDER&amp;gt;/content/post/&amp;lt;SHORT-POST-TITLE&amp;gt;/
cd &amp;lt;MY-WEBSITE-FOLDER&amp;gt;/content/post/&amp;lt;SHORT-POST-TITLE&amp;gt;/
jupyter lab index.ipynb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;jupyter&lt;/code&gt; command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.&lt;/p&gt;
&lt;h2 id=&#34;edit-your-post-metadata&#34;&gt;Edit your post metadata&lt;/h2&gt;
&lt;p&gt;The first cell of your Jupter notebook will contain your post metadata (&lt;a href=&#34;https://sourcethemes.com/academic/docs/front-matter/&#34;&gt;front matter&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In Jupter, choose &lt;em&gt;Markdown&lt;/em&gt; as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
title: My post&#39;s title
date: 2019-09-01

# Put any other Academic metadata here...
---
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Edit the metadata of your post, using the &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content&#34;&gt;documentation&lt;/a&gt; as a guide to the available options.&lt;/p&gt;
&lt;p&gt;To set a &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#featured-image&#34;&gt;featured image&lt;/a&gt;, place an image named &lt;code&gt;featured&lt;/code&gt; into your post&amp;rsquo;s folder.&lt;/p&gt;
&lt;p&gt;For other tips, such as using math, see the guide on &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34;&gt;writing content with Academic&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;convert-notebook-to-markdown&#34;&gt;Convert notebook to Markdown&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;p&gt;This post was created with Jupyter. The orginal files can be found at &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter&#34;&gt;https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Academic: the website builder for Hugo</title>
      <link>/post/getting-started/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      <guid>/post/getting-started/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 &lt;em&gt;widgets&lt;/em&gt;, &lt;em&gt;themes&lt;/em&gt;, and &lt;em&gt;language packs&lt;/em&gt; included!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://academic-demo.netlify.com/&#34;&gt;Check out the latest &lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes, or &lt;a href=&#34;https://sourcethemes.com/academic/#expo&#34;&gt;view the &lt;strong&gt;showcase&lt;/strong&gt;&lt;/a&gt; of personal, project, and business sites.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;👉 &lt;a href=&#34;#install&#34;&gt;&lt;strong&gt;Get Started&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;📚 &lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34;&gt;View the &lt;strong&gt;documentation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;💬 &lt;a href=&#34;https://discourse.gohugo.io&#34;&gt;&lt;strong&gt;Ask a question&lt;/strong&gt; on the forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;👥 &lt;a href=&#34;https://spectrum.chat/academic&#34;&gt;Chat with the &lt;strong&gt;community&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;🐦 Twitter: &lt;a href=&#34;https://twitter.com/source_themes&#34;&gt;@source_themes&lt;/a&gt; &lt;a href=&#34;https://twitter.com/GeorgeCushen&#34;&gt;@GeorgeCushen&lt;/a&gt; &lt;a href=&#34;https://twitter.com/search?q=%23MadeWithAcademic&amp;amp;src=typd&#34;&gt;#MadeWithAcademic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;💡 &lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues&#34;&gt;Request a &lt;strong&gt;feature&lt;/strong&gt; or report a &lt;strong&gt;bug&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;⬆️ &lt;strong&gt;Updating?&lt;/strong&gt; View the &lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34;&gt;Update Guide&lt;/a&gt; and &lt;a href=&#34;https://sourcethemes.com/academic/updates/&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;❤️ &lt;strong&gt;Support development&lt;/strong&gt; of Academic:
&lt;ul&gt;
&lt;li&gt;☕️ &lt;a href=&#34;https://paypal.me/cushen&#34;&gt;&lt;strong&gt;Donate a coffee&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;💵 &lt;a href=&#34;https://www.patreon.com/cushen&#34;&gt;Become a backer on &lt;strong&gt;Patreon&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;🖼️ &lt;a href=&#34;https://www.redbubble.com/people/neutreno/works/34387919-academic&#34;&gt;Decorate your laptop or journal with an Academic &lt;strong&gt;sticker&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;👕 &lt;a href=&#34;https://academic.threadless.com/&#34;&gt;Wear the &lt;strong&gt;T-shirt&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;👩‍💻 &lt;a href=&#34;https://sourcethemes.com/academic/docs/contribute/&#34;&gt;&lt;strong&gt;Contribute&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;













&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png&#34; data-caption=&#34;Academic is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Academic is mobile first with a responsive design to ensure that your site looks stunning on every device.
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Key features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Page builder&lt;/strong&gt; - Create &lt;em&gt;anything&lt;/em&gt; with &lt;a href=&#34;https://sourcethemes.com/academic/docs/page-builder/&#34;&gt;&lt;strong&gt;widgets&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34;&gt;&lt;strong&gt;elements&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Edit any type of content&lt;/strong&gt; - Blog posts, publications, talks, slides, projects, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create content&lt;/strong&gt; in &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34;&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://sourcethemes.com/academic/docs/jupyter/&#34;&gt;&lt;strong&gt;Jupyter&lt;/strong&gt;&lt;/a&gt;, or &lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-rstudio&#34;&gt;&lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt; - Fully customizable &lt;a href=&#34;https://sourcethemes.com/academic/themes/&#34;&gt;&lt;strong&gt;color&lt;/strong&gt; and &lt;strong&gt;font themes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Display Code and Math&lt;/strong&gt; - Code highlighting and &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34;&gt;LaTeX math&lt;/a&gt; supported&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrations&lt;/strong&gt; - &lt;a href=&#34;https://analytics.google.com&#34;&gt;Google Analytics&lt;/a&gt;, &lt;a href=&#34;https://disqus.com&#34;&gt;Disqus commenting&lt;/a&gt;, Maps, Contact Forms, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beautiful Site&lt;/strong&gt; - Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Industry-Leading SEO&lt;/strong&gt; - Help get your website found on search engines and social media&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Media Galleries&lt;/strong&gt; - Display your images and videos with captions in a customizable gallery&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mobile Friendly&lt;/strong&gt; - Look amazing on every screen with a mobile friendly version of your site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-language&lt;/strong&gt; - 15+ language packs including English, 中文, and Português&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt; - Each author gets their own profile page&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Privacy Pack&lt;/strong&gt; - Assists with GDPR&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stand Out&lt;/strong&gt; - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;One-Click Deployment&lt;/strong&gt; - No servers. No databases. Only files.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;p&gt;Academic comes with &lt;strong&gt;automatic day (light) and night (dark) mode&lt;/strong&gt; built-in. Alternatively, visitors can  choose their preferred mode - click the sun/moon icon in the top right of the &lt;a href=&#34;https://academic-demo.netlify.com/&#34;&gt;Demo&lt;/a&gt; to see it in action! Day/night mode can also be disabled by the site admin in &lt;code&gt;params.toml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/themes/&#34;&gt;Choose a stunning &lt;strong&gt;theme&lt;/strong&gt; and &lt;strong&gt;font&lt;/strong&gt;&lt;/a&gt; for your site. Themes are fully &lt;a href=&#34;https://sourcethemes.com/academic/docs/customization/#custom-theme&#34;&gt;customizable&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;ecosystem&#34;&gt;Ecosystem&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-admin&#34;&gt;Academic Admin&lt;/a&gt;:&lt;/strong&gt; An admin tool to import publications from BibTeX or import assets for an offline site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-scripts&#34;&gt;Academic Scripts&lt;/a&gt;:&lt;/strong&gt; Scripts to help migrate content to new versions of Academic&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;p&gt;You can choose from one of the following four methods to install:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-web-browser&#34;&gt;&lt;strong&gt;one-click install using your web browser (recommended)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-git&#34;&gt;install on your computer using &lt;strong&gt;Git&lt;/strong&gt; with the Command Prompt/Terminal app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-zip&#34;&gt;install on your computer by downloading the &lt;strong&gt;ZIP files&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-rstudio&#34;&gt;install on your computer with &lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then &lt;a href=&#34;https://sourcethemes.com/academic/docs/get-started/&#34;&gt;personalize and deploy your new site&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;updating&#34;&gt;Updating&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34;&gt;View the Update Guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Feel free to &lt;em&gt;star&lt;/em&gt; the project on &lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34;&gt;Github&lt;/a&gt; to help keep track of &lt;a href=&#34;https://sourcethemes.com/academic/updates&#34;&gt;updates&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2016-present &lt;a href=&#34;https://georgecushen.com&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      <guid>/post/2015-07-23-r-rmarkdown/</guid>
      <description>


&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(cars)
##      speed           dist       
##  Min.   : 4.0   Min.   :  2.00  
##  1st Qu.:12.0   1st Qu.: 26.00  
##  Median :15.0   Median : 36.00  
##  Mean   :15.4   Mean   : 42.98  
##  3rd Qu.:19.0   3rd Qu.: 56.00  
##  Max.   :25.0   Max.   :120.00
fit &amp;lt;- lm(dist ~ speed, data = cars)
fit
## 
## Call:
## lm(formula = dist ~ speed, data = cars)
## 
## Coefficients:
## (Intercept)        speed  
##     -17.579        3.932&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;including-plots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Including Plots&lt;/h1&gt;
&lt;p&gt;You can also embed plots. See Figure &lt;a href=&#34;#fig:pie&#34;&gt;1&lt;/a&gt; for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mar = c(0, 1, 0, 1))
pie(
  c(280, 60, 20),
  c(&amp;#39;Sky&amp;#39;, &amp;#39;Sunny side of pyramid&amp;#39;, &amp;#39;Shady side of pyramid&amp;#39;),
  col = c(&amp;#39;#0292D8&amp;#39;, &amp;#39;#F7EA39&amp;#39;, &amp;#39;#C4B632&amp;#39;),
  init.angle = -50, border = NA
)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:pie&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2015-07-23-r-rmarkdown_files/figure-html/pie-1.png&#34; alt=&#34;A fancy pie chart.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: A fancy pie chart.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
